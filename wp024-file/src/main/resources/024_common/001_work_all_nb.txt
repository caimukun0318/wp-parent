2019年11月5日
233 你得做出一些已经做好的成品,用起来直接就用,这样可以极大的提高效率

232 印象分
	01			2019年11月5日前		2019年11月5日后		total
	csc-y@@@w		1					1					1
	csc-p@xy		5				

231 今天看到的这么多问题是因为很少能够有人能够全面的处理问题,
	咋一看到处都是问题
	

230 nginx竟然可以配置域名转发到8080端口
	
	
229 对象链式编程写法会非常优雅

228 
	2147483647

227	观书有感

	作者：朱熹
	
	半亩方塘一鉴开，天光云影共徘徊。
	问渠那得清如许？为有源头活水来。

	Drainage asked Hsu what so clear, as to the source of flowing water

226 昨天改造这段代码遇到了哪些问题?能不能整理出来?
	看别人的总是简单,自己做起来发现总是卡住,看来
	纸上得来终觉浅，绝知此事要躬行
	Paper will sleep shallow, never know the matter want to practice.
	
	package cn.dante.removesmell.rs02;
	
	class SurveyDataNew {
		String path; //将数据存到这个路径的文件
		boolean hidden; //这个文件是否要隐藏
		static String prefix="c:/application/data/";
		static String suffix=".dat";

		//根据 t 的类型，设置存放数据的文件的路径和隐藏属性
		void setSavePath(int t) {
			if (t == 0) { //raw data.
				path = prefix+"raw"+suffix;
				hidden = true;
			} else if (t == 1) { //清空数据
				path = "c:/application/data/cleanedUp.dat";
				hidden = true;
			} else if (t == 2) { //处理数据
				path = "c:/application/data/processed.dat";
				hidden = true;
			} else if (t == 3) { //数据可以公布
				path = "c:/application/data/publication.dat";
				hidden = false;
			}
		}
	}

225 关于食品如何包装,如何延长保质期的问题也值得你去思考?此问题应该不难?
	难就难在亲在行动与测试?
	
224 最佳的做事方式是什么?
	01	同类事情一起做?
	02	让今天做的事情对明天有用?
	03	明确分工?
	04	自动化?
	05	一步一确认?
		
	06	步骤分解?
	07	图形化理解?
	08	指定可执行计划?
	09	不要被困难冲昏了头?
	10	亲自行动感受?
		
	11	总是向目标前进?
	12	参考过去的方案?
	13	数字化定位,提高效率?
	14	分离与组合
	15  保持正能量,趣味性
	
	16  保持良好状态
	17  量力而行 
	18  诗意,创造力,重定义能力
	19  持续,如创业计划
	20  积累
	
	21 拒绝慌乱,永远冷静应对


2019年11月4日
223 永远以好奇,喜悦,发现的心态去做事情,畏畏缩缩,犹犹豫豫,哀怨自怜永远成不了气候,
	你的人生永远保持一个良好的心态

222 原来post本身保存了很多cookie,通过这些cookie同一个父窗口的不同子窗口可以通信,
	可以手动清除cookie,点击右上角的设置,杰豪说这个cookie的写入是shiro实现的

221 竟然可以通过debug的方式,如果idea debug的左侧有x,说明代码没编译成功
	
220 关于登录以后自动处理一下参数的问题你好像并未搞得很清楚
	Cookie:JSESSIONID=9DCC50F37609CEB9E3BD853A73D1A04B; token=9f90e88e-6b78-44eb-9498-01f0f661082d; UM_distinctid=16e1f9bbf5071a-00ef2ac207ec33-3d644509-1fa400-16e1f9bbf517db; CNZZDATA1258795774=18006719-1572484721-%7C1572484721
	token:9f90e88e-6b78-44eb-9498-01f0f661082d
	X-Requested-With:XMLHttpRequest
	Content-Type:application/x-www-form-urlencoded
	
219 为什么在本地获取时password为空
	原来这框架要在session中取一个privateKey
	
2019年10月31日
218 关于新框架的登录功能,
	如何跳过拦截器的拦截
	applicationContext-shiro.xml
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/admin/login.html"/>
        <property name="successUrl" value="/admin/index.html"/>
        <property name="unauthorizedUrl" value="/admin/login.html"/>
        <property name="filterChainDefinitions">
            <value>
                <!--/pub/** = anon-->
                <!--/druid/** = authc-->
                <!--/admin/logout = logout-->
                <!--/resources/** = anon-->

                /admin/login.html = guest
                /admin/toLogin = guest
				/admin/appLogin = guest
                /admin/logout = logout
                /admin/** = user
            </value>
        </property>

	String password = rsaService.decryptParameter("password");	
	

217 今天的体会是最为经典的外观模式
	比如可以通过对象封装的方式将对象层层嵌套
	改代码不影响数据库,两者互不影响导致测试非常方便
	

216 注意saveAndFlush的id
		carLocation.setWaybillId(waybill.getId());
		CarLocation storeCarLocation =new CarLocation();

		BeanUtils.copyProperties(carLocation,storeCarLocation);
		storeCarLocation.setId(null);

		carLocationRepository.saveAndFlush(storeCarLocation);
		
215 油站发布
	http://47.104.232.195:8080/
	
	netstat -nltp

	http://47.104.232.195:8080/MrOilMgr/admin/index.html

	cd /usr/local/service
	cd /usr/local/service/8888-project-oil-service-impl
	
	

		//nohup java -DoilServerImpl -jar project-oil-service-impl.jar >/dev/null 2>out.log &

	nohup java -Dfile.encoding=utf-8 -jar project-oil-service-impl.jar &
	


2019年10月28日
214 事务模式,有则取,无则不晓得
	就好像sql与参数绑定

213 今天想到一个转化问题,你得有能力去把你得想法转化成大众认可的事务,
	不然可能永远只能是想法
	你得有把道德,知识,思想转化为金钱的能力
	就好比这种万物通用额语言有可能被发明出来吗?

212 行分离可维护程度高于空格分离高于列分离

211 按照原型理解数据结构法,因为数据结构本身可理解为生动的图
	

210 先写出完整的,再提取公用方法,代码都是一步步公用抽取的,不要指望一步全部抽取
	完成
	

209 封装变化修改法
	比如
		String columnName =  "I_RECEIVE_AMOUNT";
        String columnNameAlias =  "monthReceiveAmount";
        String tableName = "t_settlement_station_month";
        String dateDimension = "month";
		
        Map params =   new HashMap<>();
        params.put("columnName",columnName);
        params.put("columnNameAlias",columnNameAlias);
        params.put("tableName",tableName);
        params.put("dateDimension",dateDimension);
		
        Map map = getStaMap(date, stationId, params);
		
		//获取单个字段通用查询
		public Map getStaMap(Date date, String stationId, Map params) {
			StringBuffer sql = new StringBuffer();
			sql.append("select "+params.get("columnName")+" as "+params.get("columnNameAlias") +" from "+params.get("tableName") +" t ");
			sql.append(" where 1=1 ");
			if (date!=null){
				if (((String)params.get("dateDimension")).equalsIgnoreCase("month")){
					sql.append(" AND t.i_month >= :startCreateDate ");
					sql.append(" AND t.i_month <= :endCreateDate ");
					params.put("startCreateDate", NumberUtil.toInt(DateUtil.format(date, "yyyyMM")));
					params.put("endCreateDate", NumberUtil.toInt(DateUtil.format(date, "yyyyMM")));
				}
				if (((String)params.get("dateDimension")).equalsIgnoreCase("day")){
					sql.append(" AND t.i_day >= :startCreateDate ");
					sql.append(" AND t.i_day <= :endCreateDate ");
					params.put("startCreateDate", NumberUtil.toInt(DateUtil.format(date, "yyyyMMdd")));
					params.put("endCreateDate", NumberUtil.toInt(DateUtil.format(date, "yyyyMMdd")));
				}
			}
			if (StringUtil.isNotBlank(stationId)){
				sql.append(" AND t.s_station_id IN (:oilstationIds) ");
				params.put("oilstationIds", stationId);
			}
			System.out.println("sql:"+sql.toString());
			List list = this.findListBySql(sql.toString(), params);
			if (list!=null && list.size()>0){
				return (Map)list.get(0);
			}
			return null;
		}

	
	这时候你才知道使用通用字段的作用
	

208	@Cacheable用法
	@Cacheable(value = "statistic", key = "#stationId + #startDate.toString() + #endDate.toString() + #dateDimension.toString() + 'findStationRefuelRecordDay'")

208 idea tocmat部署设置
	02 
		Deployment
			exploded 
	01	
		server
			on update action	Redeploy
			on frame deactivation	Update classes and resources
		
207 加油站部署配置
	web resoucre dir																									
	D:\001_work\020_gitcode\oilStation\project-oil-business\project-oil-web-admin\src\main\webapp

	path /

	Path
	D:\001_work\020_gitcode\oilStation\project-oil-business\project-oil-web-admin\src\main\webapp\WEB-INF\web.xml

206 多参数情况代码分离术

205 睡眠的问题该如何解决,这么多年都没找到治本的方案,给我一个这样的睡眠条件
	创造力将大大降低,你要一直这样下去吗?该怎么解决现在面临的问题

204 idea项目点击类名不跳 .java文件跳jar包的方法
	处理	maven管理的项目中有灰色,重启idea

203 maven管理的项目中有灰色   造成这个的原因是忽略了maven模块，此时需要将忽略的文件ignored files进行恢复
	Settings-maven-Ignored Files，将灰色项目如上图中的对勾去掉。

202 保存一份完整的idea项目配置文件其实非常必要,尤其是项目非常大的时候,
	可帮你节省很多时间

201 idea不识别java文件,除了配置jdk外,还可能需要手动把source设置为根目录

200 有些jar包问题需要重新安装
	
2019年10月23日
199 jpa中实体不配置映射表名,且实体不是默认表名时会报找不到实体
	
198 这个是给jpa用的
	@Id
    @GeneratedValue(
            strategy = GenerationType.IDENTITY
    )

197 lombok无法通过编译问题处理 
	settings - annotation Processors - enable annotation processing
	

196 问题整理
	
	04 权限表中的用户类型有啥用?	//暂时好像没用
	03 如何查询某一个角色对应的权限?
	02 系统如何获取当前用户?
	01 系统需要初始权限数据吗,如果需要是哪些?

195 权限问题本身是有难度的,如果和还要整合新的框架难度就更大了?当你自己做的时候
	才知道复杂度是有的
	
194 只查询顶级和下一级就可以查出所有的权限?

193 用户角色权限模块思路
    01 整理数据模型
    		user - user_role - role - role_permission - perminssion
    		用户表关联角色表,	一个用户可能存在多个角色
    		角色表关联权限表	一个角色可能对应多个权限
    		权限表自身都有父子层级关系	体现在表里有个parentId字段

    	02 用户
    		01 添加用户
    			需要用户表本身属性和对应的角色id列表
    		02 修改用户
    			需要用户表本身属性和对应的角色id列表
    		03 删除用户
    			需要级联删除中间表user_role相关联的记录
    		04 查询用户
    			单表查询,也可查询出对应的角色id集合

    	03 角色
    		01 添加角色
    			需要角色表字段和权限id的列表
    		02 修改角色
    			需要角色表字段和权限id的列表
    		03 删除角色
    			需要级联删除中间表role_permission相关联的记录
    		04 查询角色
    			单表查询,也可查询出对应的权限id集合
    	04 权限
    		权限数据一般作为系统的初始数据,也就是系统启动时数据库中已经有的数据
    		01 添加权限
    			单表添加,parentId为0或空表示顶级权限,权限是有层级的,可人为设置最多三级
    		02 修改权限
    			单表修改
    		03 删除权限
    			需要级联删除中间表role_permission相关联的记录
    		04 查询权限
    			单表查询,也可将结果以树形结构展示

192 @CurrentUser 注解在方法在哪里定义呢?

191 司机修改头像以后,数据库修改,而缓存并未修改,导致从缓存读取数据的接口数据错误
	
190 总有无所适从的时候,无法主宰自己的人,目标不清晰的人总是会遭遇这样的尴尬境地,
	随时准备好,或者计划在什么时间准备好,不要等到及其被动的时候再去准备

189 遇到这种消极词汇的人,比如liuw,千万不能灰心,永远在内心给自己打气,相信自己是人生在世
	唯一的生存方式,正常人都跟不上你的思维方式,永远打气,永远加油
	
188 重复梳理法
	比如这个设计模式中的建造者模式,第一遍看的时候不是完全理解,不能体会到他
	到底有什么好处,可以安排下一个时间再看一遍(比如礼拜六上午统一用来梳理知识)

187 储物空间	空中楼阁	高度机械化	住房平移	
	这些都是需要懂硬件知识才能实现的未来科技
	做好一件件简单事情的拼接可能真的会见证化腐朽为神奇的力量
	
186 过去的老代码会把你陷入思维定式,想要突破是极其困难的

185 最短路径算法如何做步骤分解呢?今天连我都觉得很困难,看来这真的需要天才的思维?
	
184 一步一脚印的方式是及其科学,经过反复实践检验的方式
	为了达成某一目标去做事,这是最有效果的方式

183 学习spring,jvm的方式是一样的,都是自己来手写,这样才能有深刻的体会?
	早晨的时间人的状态是极好的,应该尝试去挑战一些困难的事情?
	还要学会困难的事情和容易的事情一起做.

182 算法工程师是个什么新鲜职位吗?
	严格的说并不是:
		他也能通过目标分解,指定计划一步步达到目标.
		
2019年10月22日
181 代码的去注释,结构优化确实是一个难题,让每一个类明确的职责明确,让每一个方法尽可能
	分离只判断一个条件
	
180 代码与注释的同步也是个麻烦问题,尽量让代码代替注释
	
179 这些调试方法还是得尽可能展开,找到使用场景,有些方法我自己写的自己忘记是什么意思了	
	
178 藏得越深的bug越难找到,越便于测试bug越少

2019年10月21日

177 睡眠的步骤究竟如何分解,这也是个你应该仔细研究并实践的问题

176 google右上角三点可以设置开发模式切换到右侧

175 戏剧性生活法 
	
174 用突出的动作制造悬念法,就像铁手看了竹简二话不说砸了桌子
	
173
		什么样的类是看代码的人最喜欢的?那就是简单易看的类.一个设计得好的类,能够让人家一眼就能出你这个
	类都有些什么东西,明白你这个类都做了一些什么事.如果看这个类的时候,要不停的将屏幕滚来滚去,而思维还要
	随屏幕的滚动跳转,无形中,看懂这个类需要花的时间就多了.
	
172 经过思考后再查看答案印象极为深刻
	
171 
	注解要放在入参dto才能生效
	@JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss", timezone = "GMT+8")
    private Date startTime;
	
	Caused by: com.fasterxml.jackson.databind.exc.InvalidFormatException:
	Can not deserialize value of type java.util.Date from String
	"2018-11-09 17:37:12": not a valid representation
	(error: Failed to parse Date value '2018-11-09 17:37:12':
	Can not parse date "2018-11-09 17:37:12Z":
	while it seems to fit format 'yyyy-MM-dd'T'HH:mm:ss.SSS'Z'', parsing fails (leniency? null))

170 今天有个问题是注解执行的时间,是方法执行前还是方法执行后

169		
	为什么下面的配置以前都是好的,今天却突然找不到呢?	
		<dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>5.2.0.RC2</version>
            <scope>compile</scope>
        </dependency>
		
2019年10月18日
168 
	<![CDATA[ ]]

	<![CDATA[AND (DATE_FORMAT(plan_end_time, '%Y-%m-%d') < DATE_FORMAT(CURDATE(), '%Y-%m-%d'))]]>

	
	INSERT INTO `ad`(`title`, `content`, `url`, `pc_img_url`, `app_img_url`, `start_time`, `end_time`, `seq`) VALUES (1, '2', '3', '4', '5', '6', '2019-10-18 18:52:23', '2019-10-17 18:52:25', '2019-10-18 18:52:28', 1);

	
	<mapper namespace="com.yunqing.mybatis.dao.UserMapper">
    <select id="getUserById" resultType="com.yunqing.mybatis.bean.User">
        select * from t_user where id = #{id}
    </select>
    <insert id="insertUser" parameterType="com.yunqing.mybatis.bean.User" useGeneratedKeys="true">
        INSERT INTO t_user(name,gender,email) VALUES (#{name},#{gender},#{email})
    </insert>
    <update id="updateUser" parameterType="com.yunqing.mybatis.bean.User">
        UPDATE t_user SET name=#{name},gender=#{gender},email=#{email} where id=#{id}
    </update>
    <delete id="deleteUserById">
        DELETE from t_user where id=#{id}
    </delete>
</mapper>

167 每次被人叫去谈话都觉得心里很不自在,你好像并不喜欢这样的方式,真正对你而言重要的事情是什么,
	真正有效率的挣钱方式是什么,这可能是你终身都需要思考的问题,找工作这样的方式也许永远跟不上自己
	的节奏,怎样取得关于挣钱立竿见影的效果,未来在哪里生活,如何结婚,如何度过每一天,这些问题你好像
	很难去找到答案
	
166 竞标逻辑修改
	
165 每天的时间都是一晃而过,你不能在犹豫中度过

164 有时候我在想,我究竟能看的起谁,我们是不是应该以博弈的形式来证明自己的能力及薪资
	
2019年10月8日
163 数据不同维度展示法
	
162 
	windows应用文件夹布局 -> 查看 -> 选项 -> 查看 -> 应用到文件夹
												
161 
	org.springframework.web.util.NestedServletException: 
	Handler dispatch failed; nested exception is java.lang.NoClassDefFoundError:
	org/apache/ibatis/ognl/ASTOr
	
160 
	数据库
	
159	
	FUNCTION logistics.getChildList does not exist

158 post竟然可以通过 crtl + 来调节所有窗体大小
	
157	
	
	SELECT COUNT(DISTINCT(`car_id`)) FROM `waybill_detail` WHERE `waybill_id` IN 
	( SELECT `id` FROM `waybill` WHERE `car_ownner_id` = 12 AND `status` = 'waybill_status_in_transit')
	
156 
	02 实体是取不到 @Transient中 的属性的
		
	01 
		像这样的sql如果二选一的话传入的参数如果是运单对象将更加通用
		select * from waybill where car_ownner_id = 12 or cargo_ownner_id = 37 

155 数据库函数
	04 
		
	03 http://119.23.172.36:8392/api/carCargoOwner/getCustomer	

	02 调用
		<select id="getChildCategory" resultType="string">
			select getChildList(#{id})
		</select>

	01 定义
		CREATE DEFINER=`root`@`%` FUNCTION `getChildList`(`v_pid` int) RETURNS varchar(1000) CHARSET utf8
		BEGIN
			 DECLARE sTemp VARCHAR(1000);
		   DECLARE sTempChd VARCHAR(1000);
		   SET sTemp = '$';
		   SET sTempChd = cast(v_pid as CHAR);
		   WHILE sTempChd is not null DO
		   SET sTemp = concat(sTemp,',',sTempChd);
		   SELECT group_concat(id) INTO sTempChd FROM product_category where FIND_IN_SET(parent_id,sTempChd)>0;
		   END WHILE;
		RETURN substring(sTemp,3);
		END

154 todo
	
	02 定位中心
	01 司机全部运单接口

153 处理这些突发问题有时真的是没精力,其实这很多问题都是可以提前做好的

152 为什么今天的状态不是很好,有时候我常想,人的状态变化能不能控制呢?
	
151 数学模型推演法
	
150 业务问题
	
	
	02 
		司机跟他对应的车辆是一一对应的,现在车辆是控制了状态的,同一个运单添加运单项不能添加相对于当前
		运单繁忙的车辆,不同的运单如果添加了其他运单的司机,则必须也添加当前运单项中对应的车辆
		
	01 
		现在的设计是一个运单对应多个运单项,一个运单项对应一个司机,这种情况下就是一个运单对应
		多个司机,可能存在一个司机多个运单的情况吗
		
		业务是同一个运单的不同运单项司机不同
		不同运单的运单项司机却可能相同,这合理吗?

		一个运单项的只可能属于一个运单,
		而运单项里面的司机却可能处于两个运单
	                                          
149 
	/**
	 * 中文时间
	 */
	public String getCreateDateCN(){
		if (createDate!=null){
			return DateUtils.fromToday(createDate);
		}
		return "";
	}
	
148 项目开发中关于需求问题总是搞得模糊不清的,所有人都不知道自己具体应该做什么,
	这种情况跟没有目标的人生是一样的,忙忙碌碌,反反复复,其实这种问题无非就是一个数据的组合问题
	和一与多的问题,现在的设计又不懂数据模型,原型总是有问题,大多数问题都搞得模糊不清的,
	这种模糊难道是生活中的常态吗?
		
147 idea中部署日志 Deploying web application directory D:\002_software\apache-tomcat-7.0.42-jk\webapps\manager
	到底是什么意思呢?
	
146 好像在tomcat中配置的quartz项目并未启动,到底是启动的哪个tomcat呢?
	
145 idea中有一招可以复制文件的关联路径
	原来idea中可能存在 cn.dante.jk/mapper/FactoryMapper.xml

144 今天思考最多的还是社会的财富来源问题,这个问题为什么总是很难以合理的方式推演出来呢?
	我常在想,社会财富能不能分解成人人都能理解,都能生产的最小单位,这样的组合单位能通过设计
	转化为具体的物质和精神资源,这样人人都知道自己的财富少取决于自己生产了多少这种基本单位,
	这样我们社会的经济发展会不会更加明确,人民的目标会更加清楚,不会像现在这样连谋生都这么艰难.

143 以前是司机到达目的地后匹配货源,现在货主发布货源也按照常用路线匹配车主,
	如果以前的代码能做的通用,现在代码改动就很小了,其实你感觉这样的逻辑如果没人验证还是
	有点小复杂
	
142 这种多点装货,多点卸货的问题可能演变成求这个最优路径问题,你会求这个最优路径吗?这样的问题求出来的结果
	该如何展示?都是你可以思考的问题

141 难道老外做的肯德基味道那么相近是因为工作流程,这就是抽象不应该依赖细节,
	细节应该依赖抽象
	
140 idea如何将项目标记为web项目,如何快速建立父子关系？
		Facets？

139 为什么nohup启动的jar包没停?难道前台启动的jar包在关掉窗口以后会自动停到
	
138 好像小伙伴们都喜欢玩这种三国题材的游戏
	

137 还有关于numsingle如何还原到以前的状态问题,这个问题有点类型游戏存档还原问题,确实并没想到太好的应对思路,
	但无论如何你应该相信自己的智慧,你的今天已经比以前进步太多了,同时你要坚信这个世界有好的事物值得你去憧憬,
	因为总有人获得比你牛,你总有巅峰可攀登,目前你最需要过得就是创业与赚钱这两关,无限可憧憬的远方,处处碰壁的现实,
	无休无止的消极情绪,还有游戏人生,笑对生活的态度,你该怎么选择
	你要记住一点,当你足够强大的时候,你的影响力会越来越大

136 现在的自己当完成手头的任务,马上又有挑战新任务的憧憬,这样的状态应该说是相当积极的,人的成长应该说就是
	心智的成熟,想一想以前的自己的状态,当时心里想的是一辈子搞增删盖查就满足了,而现在的你想要去接受更高难度的
	任务,你需要做的事情还是很多,比如过去总结的关于讲话的停顿,拖延,享受你并不能总是做到,关于如何创业赚钱你还是
	缺乏实践,你的想法现在都只能是停留在脑子里,万一哪一天你真的创业了,你会不会连起床这关都过不了
	

135	极光消息安卓和ios版本不一致也可以推,极光的代码调试策略相当科学,先创建一个没有问题的
	服务端,服务端能够打通手机表明手机集成无问题,这种无错误中间层模式非常值得借鉴,可以有效地
	的规避责任人不明的问题
	
134 一想到创业就兴奋,平常的生活实在是太缺乏激情
	
133 36部署
	cd /home/logistics
		
132 今早起床,本来还想窝在被窝里做个好梦,却被闹钟不情愿的吵醒了,心想现实还是太过平庸,
	我有时也想舒舒服服的躲在被窝里,抵御这寒冷的时光,人是多么容易消极的生物,你能勇敢的起床,
	就已经迈出了勇敢的一步,人生可能就是一个不断战胜自己消极的过程,可及时这一步做了又能怎样,
	今天你又能未来的人生做点什么,未来还有这么多难题需要破解
	
131 
	06 网络协议的传输与应用

	05 项目部署每一过程文件的相应变化

	04 如何检验一个配置文件是否正确

	03 如何测试配置文件的读取能否成功

	02 物流项目配置文件
		01 
			mybatis:
			  mapper-locations: classpath*:mapper/*.xml
			  #  开启驼峰命名转换 userName - user_name
			  configuration:
				  map-underscore-to-camel-case: true
	01 研究tomcat启动和配置文件读取的问题
	
	

2019年9月29日
130 数独程序的arr从1开始会不会更人性化
	
129 记录错误步骤分步调试法

128 关于怎样度过自己的一生,也许你早就有了自己的答案,即使穷困潦倒,也得按照自己的想法去创业,去生活,
	去与生活中哪些奇怪的现象斗争,你在城市混的再好最多也只能是个房奴,如果创业,你得从心里相信自己的能力,
	相信自己的想法可以比别人好很多,而不要去在乎周围人的眼光,在现代社会,可能你唯一的生活方式就是
	无论遭受怎样的阻力,也得内心坚定,想办法取得属于自己的胜利
	
127 比如说你要一致一个活的虚拟机,最好是移植一个已经启动好虚拟机服务的快照,虚拟机的各种软件环境,能否成功一致都是
	较大的问题,移植虚拟机具体需要移植哪些软件,移植完以后如何使用,方方面面都需要单元测试,即时测试
	
2019年9月27日

126 关于农村与城市的土地制度你到现在还是模糊不清的,你应该去哪里获得最靠谱的资讯?
	
125 万事万物好像都是这样,你懂的时候觉得很简单,你不懂的时候对你而言是一道天坎,就好像现在建房子对你而言是一件及其
	困难的事情,而对那些从业者却不过是轻而易举,就好比现在从业做人工智能和你盖房子对而言是一个难度,我永远不会忘记
	曾经那无所适从的光阴,城市的生活与工作能让自己有半点安全感吗?你能为你的现状做些什么,当下最应该做什么?
	
124 postman竟让可以测试接口的响应时间

123 其实看再多的文档,不做实际的项目只能是纸上谈兵,讲的通熟一点,你用这个技术做了什么事情
	
122	
	这里以Java语言为例，首先一定要 理解 JAVA；第二步，JAVA完了以后，一定要 理 解 JVM；其次，还要 理解 操作系统；再次还是要了解一下 Design Pattern，这将告诉你怎么把过去的经验抽象沉淀供将来借鉴；还要学习 TCP/IP、 分布式系 统、数据结构和算法。

	程序员一定要通过不停的学习、练习和总结， 形成自己的一套架构设计原则和方法！

121	
	架构，刚开始的解释是我从知乎上看到的。什么是架构？有人讲， 说架构并不是一 个很 悬 乎的 东西 ， 
	实际 上就是一个架子 ， 放一些 业务 和算法，跟我们的生活中的晾衣架很像。更抽象一点，
	说架构其 实 是 对 我 们 重复性业务 的抽象和我 们 未来 业务 拓展的前瞻，强调过去的经验和你对整个行业的预见。
	我们要想做一个架构的话需要哪些能力？我觉得最重要的是架构师一个最重要的能力就是你要有 战 略分解能力。
	这个怎么来看呢:
	第一，你必须要有抽象的能力，抽象的能力最基本就是去重，去重在整个架构中体现在方方面面，从定义一个函数，
	到定义一个类，到提供的一个服务，以及模板，背后都是要去重提高可复用率。
	第二， 分类能力。做软件需要做对象的解耦，要定义对象的属性和方法，
	做分布式系统的时候要做服务的拆分和模块化，要定义服务的接口和规范。
	第三， 算法（性能），它的价值体现在提升系统的性能，所有性能的提升，
	最终都会落到CPU，内存，IO和网络这4大块上。
	
120 遇到茫茫多的问题不要乱,先整理好思路,找到眼下具体可操作的方法
	
119 代码就是你与世界交流的方式,就好像语言是人与人之间的交流方式
	
2019年9月26日

118 人生最好的状态一定是自信的积累,当你感觉无所适从,茫然,彷徨额时候,
	你的静下心来看书或者学习点新知识了
	
117 searchAndReplace搜索时最好是勾选subdirectory
	
116 上次部署因为数据配置的问题导致数据库锁死,
	杰豪直接重启了项目,一点微小的事务可能会造成相当严重的影响,
	就像波音公司一点软件的小bug可能会造成不可逆转的灾祸

115 删除玩法不如填坑玩法?

114 分离与组合的关系需要好好理解
	
113 分类方法(三级分类较为合适)
	
	16 数据网

	15 结构分类
	14 地点分类	B 
	13 项目网 B
	12 语言网 B
	11 英文网 B 
		
	10 步骤网 B
	09 测试网 B
	08 报错网 B
	07 数据结构网 B
	06 配置网 B
		02 架构
		01 技术
		
	05 文件类型 C
	04 文件大小	B
	03 代码 B
		01 代码自闭环 
	02 技术 B
	01 业务 A
	

112 上次那个打的jar包没有依赖包的问题,多亏杰豪帮助,不然自己摸索可能会花更多的时间,
	可见技术体系的全面性多么重要,很多的细节问题你可能都来不及测试,你最好是借助于专业权威的文档,
	最好的工作状态一定不是忙成狗的状态,而是有足够的时间去应对可能发生的问题
	
2019年9月24日
111 maven打包时
		Profiles
			可以配置releasePackage

2019年9月16日
110 总开关与一般开关设计

109 虚拟机的快照应该如何移植
	技术茫茫多,你应该维护怎样的体系,如何用这这些来创造价值,
	你自己需要的功能是哪些,数据又能有怎样的价值,这一切的一切都是问题,
	社会的各种问题对你而言将是个无底洞,你该如何自处?
	也许你最需要的是像大海一样平静的内心,应对社会一切可能的波澜
	尽可能的去发挥自己的长处 
	
108 现在的定时任务为什么都是每个一段时间跑一次
	可以根据某一个订单创建一个任务吗,定时任务的问题为什么还是模糊,
	是因为了解不够深刻吗?
	为什么不能增加单个任务开关,总任务开关,
	
107 mapper中的方法名竟不能与service中的方法名相同,为什么我以前写的时候方法名都是一致的呢?
	这个问题有点诡
	  /**
     * 车辆位置分页
     */
    @Override
    public ServerResponse carLocationPage(CarLocationPageDto dto, Integer pageNum, Integer pageSize) {
        CarLocation carLocation = new CarLocation();
        BeanUtils.copyProperties(dto, carLocation);

        com.github.pagehelper.Page<Object> page = PageHelper.startPage(pageNum, pageSize);
		
		//如果用这行代码会报错
//        List<CarLocation> list = carLocationMapper.carLocationPage(carLocation);
        List<CarLocation> list = carLocationMapper.page(carLocation);
//        List<CarLocation> list = carLocationMapper.carLocationPageAll();

        PageData<CarLocation> pageData = new PageData<>(page.getPageSize(), page.getPageNum(), page.getTotal(), list);
        return ServerResponse.successWithData(pageData);
    }


106 相同类名的不同对象竟然共享static修饰的成员变量
	package com.mytest;
	
	class A {
		 static  int num = 1;
		private String name;
	 
		public String getName(String name) {
			return name;
		}
	 
		public void setName(String name) {
			this.name = name;
		}
		
		public void show() {
			System.out.println("name:" + name + " num:" + num);
		}
	}
	 
	public class TestStatic {
		public static void main(String[] args) {
			A a = new A();
			a.setName("classA");
			a.num++;
	 
			A b = new A();
			b.setName("classB");
	 
			a.show();
			b.show();
		}
	}



105 不同类型的数据添加接口做成两个最好?
	
104 这个框架果然只检测加了@JsonProperty	注解的属性
	用这个检测全部 
	@JsonAutoDetect(fieldVisibility = JsonAutoDetect.Visibility.ANY)
	
103 果然属性上加注解不行
	改这个 DataSource 好像也无效

102 今天在处理
	{
		"content": [
			{
				"id": "1",
				"createDate": "2019-09-17 10:32:21",
				"modifyDate": "2019-09-17 10:32:24"
			}
		],
		"total": 1,
		"totalPages": 1,
		"pageNo": 1,
		"pageSize": 20
	}
	数据返回时浪费了大量时间,因为没有返回实体的属性 
	原因是没搞明白相关的注解和测试不方便 
	也许先把理论搞明白可以节省大量时间 

101 用具体可行的操作步骤帮助自己
	
100 锁价玩法
	每次创建时读取后台订单表的配置,订单后订单表中的价格无需修改
		
099 锁价订单列表和锁价详情页面非常相似,能否通过让方法传入参数的模式让代码重用呢?
	这可能更需要大局观,油站id in 是不变的,变化的是in后面的参数,变化与不变有时是难以区分的,
	难关很多方法参数类型是map,因为map可以封装的参数很多 
	比如sql拼接,map中有则加,无则删
	
098 锁价以前的油品是不分页的,现在如何做成分页的 
	重新写似乎是一个万能的办法,但是花的时间多,是以前代码不好维护导致的结果,
	比较好的设计是一个方法只做一个单表操作 
	
2019年9月12日
097 人工智能产品
	
096 由这个动态跳转引发的学问是符号学
	
2019年8月21日
095 今天看这个锁价的原型图,第一没有编号,第二没有顺序,第三没有跳转,不得不花费大量时间来处理
	该问题
	
094 短信验证码参考 SmsController
	全局搜索好像不能搜索jar包里面的路径

093 将非maven中央仓库管理jar包引入本地后,代码中不会报错,但引用会报错
		
092 可变参数可以传入数组
	
091 方法
	具体步骤实现法 
	 

090 打开ie
	运行 iexplore 
	命令行输入	start iexplore.exe

089 处理这种配置问题
		02 字符串拼接模式
		01 层级模式

088 idea中有些未跟踪的文件可以在查看时直接删除,idea编译后的文件可备份后手动删除
	
087 mysql中创建时间的默认值可设为CURRENT_TIMESTAMP
	
086 加油站的代码可暂时先放到consumer里面
	
085 难道代码中不能直接执行sql吗
	
084 我们做事情的特性都是采用最简单,最快速的办法
	
083 身份校验建议顺序
	主人
	自身认证
	状态认证
	

	Customer customer = RequestUtil.getCurrentUser(Customer.class);

	//取得车主信息
	CarCargoOwnner carOwner = customer.getCarOwner();
	Car car = carService.assertCarBelongToCurrentUser(requestParams.getParams().getId(), carOwner.getId());
	carService.assertCarCertified(car);
			
	//校验车辆状态必须为空闲
	if(!car.getStatus().equalsIgnoreCase(CarConstants.CAR_STATUS_FREE)){
		throw new BusinessException(112, "车辆不是空闲状态");
	}
	

082 重新加载类后对aop作用的注解好像无效果,为什么

081 数据校验放在c层可能好一点

080 
	为什么今天迟迟不愿意动手做,因为你觉得问题太复杂了,找不到入口,先从简单功能起步,快速做出决定
	
079	获取token代码
	public String getToken(Customer customer) {
		String jwtToken = Jwts.builder().setId(String.valueOf(customer.getId())).setIssuer(Constant.ISS_URL)
				.setSubject(customer.getTel())
//				.claim("roles", userExtendInfo.getRole(RequestUtil.currentRequest().getRequestURI()))
//				.claim("roles", null))
				.setIssuedAt(new Date())
				.signWith(SignatureAlgorithm.HS256, Constant.PUBLIC_KEY).compact();
		String tokenStr = TokenUtil.obtainToken(customer, jwtToken);//放入redis缓存
		return tokenStr;
	}

078 校验token代码不通过是不会进controller了的

077 shiro和用户信息竟然竟然可以连接不同的redis服务器

076 为什么现在物流项目只能连245的redis了

075 难道只有执行这行代码时会报无效的token
	User user = RequestUtil.getCurrentUser(User.class);

074 像这种根据当前时间更新的测试方法最好是在程序里新增测试
	设计接口时可以考虑接口之间的互相调用
	
2019年8月2日
073 直接查看软件改变状态好最源头的文件变化是调试错误的极好方法

072 项目放在tomcat目录问题及路径访问问题上次浪费了大量时间,还是应该尽量搞明白

2019年7月23日
071 每次部署增加版本号,启动后查看版本号与当前版本是否一致
	
070
	jRebel 环境搭建与破解 B 
	好像改了配置文件jrebel不会自动编译
		编译日志
		JRebel: Reloading class 
		改了配置后还需再改一行代码
		JRebel: Reconfiguring bean
	
	@Value("${code.length}")
	private String length;
	
	System.out.println("jjjj");
	System.out.println("23456");
	System.out.println("length:"+length);
	
069	
	
	校验验证码

	//校验验证码 手机号,验证码
	@Autowired
    private ICache cache;
	
//        smsService.checkCode(dto.getTel(),dto.getSmsCode());

        String code = cache.get(Constant.VERFI_CODE_PREFIX + dto.getTel());
        if (!dto.getSmsCode().equalsIgnoreCase(code)) {
            throw new BusinessException(112,"验证码校验错误");
        }
	
068	
	INSERT INTO `advanceManage`.`sys_customer`(`id`, `user_account`, `tel`, `password`, `user_name`, `logo`, `app_open_id`, `open_id`, `union_id`, `extend`, `customer_type`, `user_status`, `create_by`, `create_date`, `is_active`) VALUES (32, '18627011956', '18627011956', NULL, '你再试试', NULL, NULL, 'oGcsIsy2NaHMpqYUA1eWtuQXHx24', NULL, NULL, NULL, 1, NULL, '2019-07-22 15:17:45', NULL);
	
	
	第二次code
	081zTxUs07BLuf1mIMTs0KzyUs0zTxUu
	
	openid:	
	oGcsIsy2NaHMpqYUA1eWtuQXHx24
068
	13277098261  王皇宝
			
	openid = "oGcsIs-MsphqgxgKvJDYuZ3T6V_0"
	
		以前的openId 011mjUOH0czImg2WzXQH0XRUOH0mjUOP

	以前的openId 
	

067
	第一次code
		
	"tel"		18627011956
	"code":"081SaHGI0EfZZe2kKNFI0RRrGI0SaHGC"          
	
	"openid": "oGcsIsy2NaHMpqYUA1eWtuQXHx24",
	
	"data": {
        "isAuthorization": "0",
        "snsUserInfo": {
            "openid": "oGcsIsy2NaHMpqYUA1eWtuQXHx24",
            "nickname": "Elvis",
            "sex": 1,
            "province": "Beijing",
            "city": "Haidian",
            "country": "CN",
            "headimgurl": "http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK7w1ic4GGvrLMfIvBTmfR3ld4BiaBZH8US14aAtqYhc2RANOFLFmw8YbeX1PyYNUJGthaBC91Hl9zg/132",
            "unionid": "oKBLd5u8IlS98uyaHXB8kEgwTfns",
            "language": "zh_CN",
            "privilege": []
        },


066
	{
		"code": 1,
		"msg": "success",
		"data": {
			"isAuthorization": "0",
			"customer": null
		}
	}

065 
	redis不设置密码也可能报空指针异常
	

2019年7月18日
064 灵活利用项目右侧maven中的+
	项目中pom文件右键也可以操作
	被maven管理的项目左侧或有大写的M字符
	
2019年7月13日
063 
	tomcat配置(注意环境变量配置)  证书密码123456
		server.xml   可配置不同应用不同端口
		web.xml		 配置首页
		webapps/ROOT 注意不要省略应用根目录	
		
2019年7月11日
062
	http://localhost/home.html
	
061
		单例模式下会共享普通成员变量和静态成员变量,多例模式下普通成员变量不共享,静态成员共享. 
	在开发中,springMVC优先使用单例模式,而且尽量不要在controller中设定成员变量. 
	如果要定义成员变量并为成员变量赋值可以配置source.properties,通过读取配置文件为成员变量初始化. 

2019年7月10日
060 
	基础jar包的应该还连接了其他的redis
	
2019年7月8日
059	项目已经严重依赖redis,redis出了问题不好切换
	
058
	思考jar包里面的代码如何修改

057
	昨天排redis错误的体会,只有搞明白项目启动流程才能明确排错的方向
	
	关注
	com.zrytech.framework.common.config.ShiroConfig
	
	public RedisManager redisManager() {
        RedisManager redisManager = new RedisManager();
        redisManager.setHost("127.0.0.1");
        redisManager.setPort(6379);
        redisManager.setExpire(604800);
        redisManager.setTimeout(5000);
        redisManager.setPassword("123456");
        return redisManager;
    }
	

	 public RedisManager redisManager() {
        PropertySource<?> propertySource = ConfigLoaderUtil.loadYml(ShiroConfig.class, "application-dev.yml");
        RedisManager redisManager = new RedisManager();
        redisManager.setHost(propertySource.getProperty("spring.redis.host").toString());
        redisManager.setPort((Integer)propertySource.getProperty("spring.redis.port"));
        int day = 7;
        if (propertySource.containsProperty("spring.redis.cache_day")) {
            day = (Integer)propertySource.getProperty("spring.redis.cache_day");
        }

        redisManager.setExpire(86400 * day);
        redisManager.setTimeout(5000);
        redisManager.setPassword(propertySource.getProperty("spring.redis.password").toString());
        return redisManager;
    }

056 
	--spring.profiles.active=my
	
	秒杀	tb_seckill_product 	
	
	支付接口	PayBussinessServiceImpl 
	
	消息文档	消息.md
	
	
2019年6月15日
055
	一个团队的定海神针，就是能把问题转化成目标函数的那个人——哪怕他连开源工具都不会用。100万找到这样的人，可真是捡了个大便宜。
	
054	
	江畔何人初见月,江月何年初照人
	Who by the riverside first saw the moon arise,When did the moon first see a man by riverside
	
	鸿雁长飞光不度，鱼龙潜跃水成文。
	Hongyan Chang Fei-ray, fish and dragons written submersible water jump. 
	
	But message-bearing swans can't fly out of moonlight,Nor can letter-sending fish leap out of their place
	
053	
	当前token	微信登录
	"token":"eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiIxOCIsImlzcyI6Imh0dHBzOi8vd3d3Lmthbmdhcm9vYmFieWNhci5jb20iLCJzdWIiOiIxODY3NDA3MDI3MiIsImlhdCI6MTU2MjMxODUxMX0.y2-fc_hvmy5QKlKAMsnc2eVzCgvusxMOWDnPnG-yAx8"
	
052	
	会员%s购买并支付了%s商品，请及时处理（有分配门店消息推送给门店，没分配推送给渠道）
	
051	模糊查询
	private String userName;
	private String tel;
	
	OfenLocation ofenLocation= BeanUtil.copy(ofenLocationDto,OfenLocation.class);
	
050	客服查询代码参考
	<select id="getUserAgentListParam" resultMap="user">
        select su.* from sys_user su,sys_user_role sur,sys_role sr
        <trim prefix="where " prefixOverrides="and ">
            user_type = 'user_admin'
            and su.id = sur.user_id and sur.role_id = sr.id
            and sr.role_name = '客服'
            <if test="user.userName != null and user.userName !=''">
                and su.user_name like concat('%',#{user.userName},'%')
            </if>
            <if test="user.tel != null and user.tel !=''">
                and su.tel like concat('%',#{user.tel},'%')
            </if>
        </trim>
    </select>
	

049 平台客服查询可以查询自己客服的数据(现在先处理平台的数据)

	渠道和门店客服
	
048	git发现文件与远程冲突
	可以 stash change
	

047 虚拟机备份方式
	直接复制vmx当前目录下的所有文件
	用vm打开时选择我已复制该虚拟机 vm会重新给复制的虚拟机分配ip地址
	
046 navicat竟然支持全库扫描查找
	
	SELECT * FROM `logistics`.`sys_dict` WHERE CAST
	(`logistics`.`sys_dict`.`dict_key` AS CHAR CHARACTER SET utf8)
	COLLATE utf8_general_ci LIKE '%three%' OR CAST
	(`logistics`.`sys_dict`.`dict_value` AS CHAR CHARACTER SET utf8)
	COLLATE utf8_general_ci LIKE '%three%' OR CAST(`logistics`.`sys_dict`.`remark` AS CHAR CHARACTER SET utf8) 
	COLLATE utf8_general_ci LIKE '%three%' OR CAST(`logistics`.`sys_dict`.`logo` AS CHAR CHARACTER SET utf8)
	COLLATE utf8_general_ci LIKE '%three%' OR CAST(`logistics`.`sys_dict`.`field_s` AS CHAR CHARACTER SET utf8)
	COLLATE utf8_general_ci LIKE '%three%' OR CAST(`logistics`.`sys_dict`.`create_time` AS CHAR CHARACTER SET utf8)
	COLLATE utf8_general_ci LIKE '%three%'
	
045 项目部署
	cd /home/app/logistics		cd /home/logistics
	mv zrytech-framework-app-1.0-SNAPSHOT.jar bak/
	rz 
		D:\001_work\020_gitcode\HazardousLogistics_dev\zrytech-framework-app\target\zrytech-framework-app-1.0-SNAPSHOT.jar
	netstat -ntlp|grep 8392	
	
	kill -9 
	./start.sh			nohup java -jar zrytech-framework-app-1.0-SNAPSHOT.jar --spring.profiles.active=36 &
						nohup java -jar zrytech-framework-app-1.0-SNAPSHOT.jar --spring.profiles.active=245 &
	tail -f nohup.out
		
	
	./start.sh

	netstat -ntlp|grep 8181	
	nohup java -Dfile.encoding=utf-8 -jar     zrytech-framework-app-1.0-SNAPSHOT.jar --spring.profiles.active=aliyun &
	
044 spring cloud版本控制	
	"spring-cloud": {
	“Edgware.SR5”: “Spring Boot >=1.5.0.RELEASE and <=1.5.20.RELEASE”,
	“Edgware.BUILD-SNAPSHOT”: “Spring Boot >=1.5.999.BUILD-SNAPSHOT and <2.0.0.M1”,
	“Finchley.M2”: “Spring Boot >=2.0.0.M3 and <2.0.0.M5”,
	“Finchley.M3”: “Spring Boot >=2.0.0.M5 and <=2.0.0.M5”,
	“Finchley.M4”: “Spring Boot >=2.0.0.M6 and <=2.0.0.M6”,
	“Finchley.M5”: “Spring Boot >=2.0.0.M7 and <=2.0.0.M7”,
	“Finchley.M6”: “Spring Boot >=2.0.0.RC1 and <=2.0.0.RC1”,
	“Finchley.M7”: “Spring Boot >=2.0.0.RC2 and <=2.0.0.RC2”,
	“Finchley.M9”: “Spring Boot >=2.0.0.RELEASE and <=2.0.0.RELEASE”,
	“Finchley.RC1”: “Spring Boot >=2.0.1.RELEASE and <2.0.2.RELEASE”,
	“Finchley.RC2”: “Spring Boot >=2.0.2.RELEASE and <2.0.3.RELEASE”,
	“Finchley.SR3”: “Spring Boot >=2.0.3.RELEASE and <2.0.999.BUILD-SNAPSHOT”,
	“Finchley.BUILD-SNAPSHOT”: “Spring Boot >=2.0.999.BUILD-SNAPSHOT and <2.1.0.M3”,
	“Greenwich.M1”: “Spring Boot >=2.1.0.M3 and <2.1.0.RELEASE”,
	“Greenwich.SR1”: “Spring Boot >=2.1.0.RELEASE and <2.1.5.BUILD-SNAPSHOT”,
	“Greenwich.BUILD-SNAPSHOT”: “Spring Boot >=2.1.5.BUILD-SNAPSHOT”
	},
	
043 注意spring boot与spring cloud版本兼容性

042 切面pointcut配置
	//匹配cn及其子包下的所有controller
    @Pointcut("execution(* cn..*.controller..*(..))")

	
041 如何给我的拦截器设置拦截路径呢?
		
	
040	
	@Configuration

	加入了这个注解的类被认为是 Spring Boot 的配置类，我们知道可以在 application.yml 设置一些配置，也可以通过代码设置配置。

	如果我们要通过代码设置配置，就必须在这个类上标注 Configuration 注解。如下代码：

	@Configuration
	public class WebConfig extends WebMvcConfigurationSupport{
	 
		@Override
		protected void addInterceptors(InterceptorRegistry registry) {
			super.addInterceptors(registry);
			registry.addInterceptor(new ApiInterceptor());
		}
	}


039 命名配置
	mybatis:
	  configuration:
		 #配置项：开启下划线到驼峰的自动转换. 作用：将数据库字段根据驼峰规则自动注入到对象属性。
		 map-underscore-to-camel-case: true

038 实用注解
	@Value("${cargo.bidWaitTime : 24}")
	private String bidWaitTime;
	
	@Value("${ftp.video-file-path :/root}")
    private String  videoFilePath;
	
	@Autowired<span class=""></span>
//	@Qualifier("carCargoExtImpl")
	private CarCargoOwnerService carCargoOwnerService;
	
037 linxu中查找文件的命令
	find /home -name 'dist*'
	
036 idea中默认的源文件好像是resources目录下面读取

035 判断启动环境
	搜索 active
	
034 日志级别配置:
	logging:
	  level:
		com.zry.framework.mapper: trace
		root: warn

033 mysql多次分页
	select b.* from (select a.* from cargo a limit 1,10) b limit 1,5 

032 测试环境加了配置文件idea就会默认去读取了

031 为什么 @Select中不能使用<![CDATA[ from user_info where user_id = #{userId} ]]>  
	
030 
	
	
029	BeanUtils.copyProperties(dto, car);			//会覆盖car的原有属性

028	
	sql中原样输出
	<![CDATA[ from user_info where user_id = #{userId} ]]>  
	
027 项目启动参数 
	--spring.profiles.active=mystart	？为什么这么切换会有问题	
		应该是分类分级的合并	
	
	nohup java -jar zrytech-framework-app-1.0-SNAPSHOT.jar --spring.profiles.active=142 &
	
026 mapper用法举例
	@Select("SELECT AVG(`evaluate_level`) FROM `evaluate` WHERE `appraiser_by_id` = #{appraiserById}")
	BigDecimal levelAVG(@Param("appraiserById") Integer appraiserById);
	
025 新增一个字段来处理这种货源公开的问题我觉得较为合适
	在货源表(cargo)中新增一个是否公开展示字段,发布货源时
	
	查询货源时只查看发布中的货源
	
024 配置无需回滚的异常
	@Transactional(noRollbackFor = BusinessException.class)
	
023 今日关键字
	可维护	
	
022 hotplace 
	建表时加上唯一性约束
	CREATE TABLE `t_user` (
		  `Id` int(11) NOT NULL AUTO_INCREMENT,  -- 自增
		  `username` varchar(18) NOT NULL unique,  -- 唯一性约束
		  `password` varchar(18) NOT NULL,
		  PRIMARY KEY (`Id`)
	) ENGINE=InnoDB AUTO_INCREMENT=1018 DEFAULT CHARSET=gbk;

	给已经建好的表加上唯一性约束
	ALTER TABLE `hot_place` ADD unique(`city`);
	

021 目前这个表车主id和用户的id目前是不一样的,注意区别开
	
020 推送记录批量插入	
	void batch(@Param("list") List<Integer> list, @Param("id") Integer id,@Param("date") Date date);
	
	<insert id="batch" parameterType="java.util.List" useGeneratedKeys="true">
        insert into cargo_send_record
        (
        cargo_id,
        car_ownner_id,
        create_date
        )
        values
        <foreach collection="list" item="item" index="index"
                 separator=",">
            (
            #{id},
            #{item},
            #{date}
            )
        </foreach>
    </insert>
	

019 //加了hotPlace以后
	加了@Param("hotPlace")
	mapper.xml中需要hotPlace.
	
018 
	
	
017 mysql时间报错
	show variables like '%time_zone%';

	set global time_zone='+08:00';
	
016	正则表达式搜集
	
015 linux 命令
	netstat -ntlp  查看进程id即端口
	free 查看内存
	top  查看进程内存占用率
	
014 集合校验参考
	/** 车源的车辆司机压货人 */
	@Valid
	@NotNull(message = "车辆不能为空")
	@Size(min = 1, message = "至少有一个车辆")
	List<CarSourceCarAddDto> carSourceCars;

013 通过数据查看接口是不错的选择
	
012 批量保存参考
	carRecordPlaceRepository.save(lines);
	
011 对象转json
	JSON.toJSONString(temp)
	
010 @Transient表示数据库表中无此字段
	

009 query示例
	@Modifying
	@Query("update Car set status = ?2 where id = ?1")
	int updateStatusById(Integer id, String status);

008 选择正则表达式
	/** 车辆核载量单位:正则 */
	public static final String REG_EX_CAR_UNIT = "^(" + CAR_UNIT_TON + ")|(" + CAR_UNIT_LITRE + ")|()$";

007 mapper注意
	 List<Car> selectSelective(CarPageDto record); 
	 <select id="selectSelective" parameterType="Object" resultMap="BaseResultMap">

006 git命令
	查看用户名 cat ~/.gitconfig 
 
005_token
	eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI2OSIsImlzcyI6Imh0dHBzOi8vd3d3Lmthbmdhcm9vYmFieWNhci5jb20iLCJzdWIiOiIxMzYxMTExMTExMiIsInJvbGVzIjoiY2FyZ29Pd25lciIsImlhdCI6MTU1ODQxNzc0Nn0.sKe5_CF2OT28OxQPqyVxv4Nk-S7kxvS4RCvsd-53lHY
	
	货主id 4
004_项目dev文件启动
	program arguments --spring.profiles.active=dev

003_接口测试
	 http://localhost:8392/ofenLocation/page
	
	{
	  "params":{} ,
	  "page":{
		"pageNum": 1,   
	    "pageSize": 10
	   },
	  "token": "eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4NCIsImlzcyI6Imh0dHBzOi8vd3d3Lmthbmdhcm9vYmFieWNhci5jb20iLCJzdWIiOiIxMzYxMTExMTEyMyIsImlhdCI6MTU1ODMxODg2NX0.dm783BZftTJPa-YNu6N-OvJRHvbl6D5DLXTnSoJMiBU"
	}
	
	{
	    "code": 1,
	    "msg": "success",
	    "data": {
		"total": 1,
		"list": [
		    {
			"id": 1,
			"name": "xm",
			"tel": "134",
			"province": "湖北",
			"city": "武汉",
			"county": null,
			"detailedAddress": null,
			"longitude": null,
			"latitude": null,
			"createDate": null,
			"cargoOwnerId": null
		    }
		]
	    }
	}
	
	新增 http://localhost:8392/ofenLocation/add
	入参简易:
	{
	  "params":{
		"id":4,
		"name":"xhhhh"
	  } ,
	  
	  "token": "eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4NCIsImlzcyI6Imh0dHBzOi8vd3d3Lmthbmdhcm9vYmFieWNhci5jb20iLCJzdWIiOiIxMzYxMTExMTEyMyIsImlhdCI6MTU1ODMxODg2NX0.dm783BZftTJPa-YNu6N-OvJRHvbl6D5DLXTnSoJMiBU"
	}
	详细
	{
	  "params":{
		"id":5,
		"name":"xm",
		"tel":"134",
		"province":"湖北",
		"city":"武汉",
		
		"county":"洪山",
		"detailedAddress":"光谷贸易中心",
		"longitude":18,
		"latitude":19
	  } ,
	  
	  "token": "eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4NCIsImlzcyI6Imh0dHBzOi8vd3d3Lmthbmdhcm9vYmFieWNhci5jb20iLCJzdWIiOiIxMzYxMTExMTEyMyIsImlhdCI6MTU1ODMxODg2NX0.dm783BZftTJPa-YNu6N-OvJRHvbl6D5DLXTnSoJMiBU"
	}
	返回
	{
	    "code": 1,
	    "msg": "success",
	    "data": "添加成功"
	}
	
	
	修改 http://localhost:8392/ofenLocation/update
	入参:
	{
	  "params":{
		"id":3,
		"name":"xhhhh"
	  } ,
	  
	  "token": "eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4NCIsImlzcyI6Imh0dHBzOi8vd3d3Lmthbmdhcm9vYmFieWNhci5jb20iLCJzdWIiOiIxMzYxMTExMTEyMyIsImlhdCI6MTU1ODMxODg2NX0.dm783BZftTJPa-YNu6N-OvJRHvbl6D5DLXTnSoJMiBU"
	}
	详细:
	{
	  "params":{
		"id":1,
		"name":"xmxmxm",
		"tel":"134",
		"province":"湖北",
		"city":"武汉",
		
		"county":"洪山",
		"detailedAddress":"光谷贸易中心",
		"longitude":18,
		"latitude":19
	  } ,
	  
	  "token": "eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4NCIsImlzcyI6Imh0dHBzOi8vd3d3Lmthbmdhcm9vYmFieWNhci5jb20iLCJzdWIiOiIxMzYxMTExMTEyMyIsImlhdCI6MTU1ODMxODg2NX0.dm783BZftTJPa-YNu6N-OvJRHvbl6D5DLXTnSoJMiBU"
	}
	返回:
	{
	    "code": 1,
	    "msg": "success",
	    "data": null
	}

	http://localhost:8392/ofenLocation/get
	输入
	{
	  "params":{
		"id":1
	  } ,
	  
	  "token": "eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4NCIsImlzcyI6Imh0dHBzOi8vd3d3Lmthbmdhcm9vYmFieWNhci5jb20iLCJzdWIiOiIxMzYxMTExMTEyMyIsImlhdCI6MTU1ODMxODg2NX0.dm783BZftTJPa-YNu6N-OvJRHvbl6D5DLXTnSoJMiBU"
	}
	返回
	{
	    "code": 1,
	    "msg": "success",
	    "data": {
		"id": 1,
		"name": "xmxmxm",
		"tel": "134",
		"province": "湖北",
		"city": "武汉",
		"county": "洪山",
		"detailedAddress": "光谷贸易中心",
		"longitude": 18,
		"latitude": 19,
		"createDate": null,
		"cargoOwnerId": 4
	    }
	}
	
	http://localhost:8392/ofenLocation/delete
	输入
	{
	  "params":{
		"id":1
	  } ,
	  
	  "token": "eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4NCIsImlzcyI6Imh0dHBzOi8vd3d3Lmthbmdhcm9vYmFieWNhci5jb20iLCJzdWIiOiIxMzYxMTExMTEyMyIsImlhdCI6MTU1ODMxODg2NX0.dm783BZftTJPa-YNu6N-OvJRHvbl6D5DLXTnSoJMiBU"
	}
	返回
	{
	    "code": 1,
	    "msg": "success",
	    "data": null
	}

002_本地数据库配置
    
	
001_物流网项目
    zrytech-framework-baseProject

	