

101	每一段代码至少都要能够从业务的角度理解它的意思
	是什么,可以干什么,如何学习它,每一行代码结合数据的具体业务意思,
	如何把你不熟悉的领域像你熟悉的领域转化,看到代码以后多思索,
	这样在不得不阅读文档时的效果可能会好一点,还要多尝试建立代码
	的前后对应关系,如果实在不知道具体意思可以自己猜想一个意思,
	能够领悟到这一层我认为对自己而言是一种蜕变,给一个相对模糊的
	意思也比不知道是什么意思好
	
	带着意思(哪怕是模糊的意思看代码也比你盲目的看一遍)效果好太多
	
100	
	流程分析梳理法
	比如这个直播业务,可以详细列出每一个流程细节,已层级列表的方式梳理业务
	
99	
	1.在1.8中ConcurrentHashMap的get操作全程不需要加锁，这也是它比其他并发集合比如hashtable、用Collections.synchronizedMap()包装的hashmap;安全效率高的原因之一。
	2.get操作全程不需要加锁是因为Node的成员val是用volatile修饰的和数组用volatile修饰没有关系。
	3.数组用volatile修饰主要是保证在数组扩容的时候保证可见性。
	

98	抽丝剥茧学习法
	把你感到陌生的变量和语法单独提取出来,分层提取,知道抽取到你刚好理解的部分,
	把这些陌生的变量语法单独拿出来测试

97	你在考虑将景区管理作为系统的菜单时又遇到了麻烦,说明你学习过系统的权限模块后并不能特别灵活的使用
	景区的员工查看这个菜单,直接跳转到景区的详情页面,这一步你准备如何做
	
96	这里面的 :visible.sync="inputVisible" 好像无效  要隐藏可以使用v-if
	<!-- <el-form-item label="景区id：">
		<el-input v-model="formDataAirport.companyId" placeholder='' class="inputW" disabled :visible.sync="inputVisible" ></el-input>
	    </el-form-item> -->

95	今天发现vue中有个重复定义路由的警告:
	vue-router.esm.js?e165:16 [vue-router] Duplicate named routes definition: { name: "details", path: "/companys/details/:id" }
		
94	今天发现脚手架工程也存在缓存的情况

93	增删改查的模板参考
	role-list.vue

92	vue中的请求路由竟然对postman也适用
	'/api/company': {
		target: 'http://localhost:9088/api/company',
		changeOrigin: true,
		pathRewrite: {
		  //这个配置究竟何用
		  '^/api/company': ''
		}
	      }

91     增删改查的样板可参考RoleController.java

90     上次那个前端的bug是通过标志定位加修改返回数据的方式定位到具体问题的 	

89     mock/index.js中对请求路径的拦截也是一个巨坑

88     vue中引用组件的demo:
		
		<el-tab-pane label="机场信息2" name="third">
                   <!-- import demo from '@/module-companys/pages/index.vue'  -->
                    <component v-bind:is="demo" ref="demoref"></component> 
                </el-tab-pane>

                <el-tab-pane label="机场信息3" name="four">
                   <!-- 新增员工弹层 -->
                   <el-button  type="primary" size="mini" icon="el-icon-plus" @click="handlAdd">新增员工</el-button>
                  <!-- <component v-bind:is="employeesAdd" ref="addUser" @doQuery="doQuery"></component> -->
                  <component v-bind:is="employeesAdd" ref="addUser"></component>
                </el-tab-pane>
	
87	
	景区app和服务器连接:  
				data=uid_sid_指令
	ws://192.168.0.103:9088/ws?data=123_1_1001  
	发送数据格式 123_1_1001  
	
	无人机和我连接
	ws://192.168.0.103:9088/ws?sid=1
		
86	
	看来做这个前端页面还是得画一个原型,有了原型才知道具体要怎么做,不能一直看脑海中抽象的记忆
	
85	能够把你学到的知识灵活使用就已经非常不简单了,
	天底下最靠谱的东西就是你的熟练度
	
84	这种方式的路由也不对
	<router-link :to="{'path':'/employees/details/' + scope.row.id}" class="el-button el-button--text el-button--small">
                查看
        </router-link>

83	今天这个引入组件的问题,不是通过百度解决的,而是通过过去模糊的印象,结合过去的代码搞定的
	现在定义4个步骤
	05 通过ref引入导入页面的变量
		 handlAdd() {
		      alert("handlAdd")
		      this.$refs.demoref.dialogFormVisible=true
		    },
		
	04 组件引入
		 <el-tab-pane label="机场信息2" name="third">
                   <!-- import demo from '@/module-companys/pages/index.vue'  -->
                    <component v-bind:is="demo" ref="demoref"></component> 
                </el-tab-pane>

	03 定义变量
		data () {
		    return {
			demo:'demo',
			//引入主键这个不能省
			employeesAdd: 'employeesAdd',
			activeName: 'first',
	
	02 声明主键
		export default {
		  name: 'companys-detail',
		  components: {
		   
		    demo
		  },
	
		
	01 导入页面
	import demo from '@/module-companys/pages/index.vue'

82	对于你不熟悉的东西,你要做记录,记录要做到每一步都具体可行
	
81	景区管理相关页面的权限配置,数据写活
	

80	为啥景区的index.vue中的数据一直不肯出现
	是因为从pdf中拷贝了数据的关系吗

79	配置换行  默认是true
	git config core.autocrlf true
	git config core.autocrlf false


78	其实今天看到的单点极致理论也非常值得深思,能做到最无可代替的自己,本身就是成功
	
			
77	我们这个系统大的角色设计
	
	1 总后台管理员  
		

	2 景区管理员	
			

	3 客户
			
	
	4 运维人员
	      		
	
76	
	权限模块的问题你已经听过许多次,但对于具体问题你依然有很多的模糊性,
	比如说景区工作人员登录系统应该看到怎样的菜单,你想明白了吗
	
	所以说为每一个景区设计一个独立的应用虽然看起来麻烦,但是实现逻辑却非常简单
	
	变化的数据总是有他的复杂度,是因为你很难精准到具体细节
	
	类似的技术你学过,却不能用于具体的工作,说明你学过的知识并没有真正落于实处,
	这似乎是一个很棘手的问题,特别考验你的记忆力与随机应变能力还有技术的迁移能力,
	这个问题你要引起足够的重视,因为面对具体景区菜单显示的问题你并不能做到胸有成竹,
	你过去学习的时候你已经很努力去思考了,也许结合具体实践才是你变得灵活的唯一方式
	
	
75	
	景区接口 
		查询所有景区
		
		查询一个景区下的所有机场


	可以考虑新增景区与飞行点的设计
	api_company  varchar(40)
	id	name	mark	create_time	
	
	api_airport
	id	name	company_id   company_name    create_time
	
	
	无人机表机构设计(api_uav)  varchar(40)
	id	sid	   name		status		company_id	 company_name	uid	 uname 		create_time			
	id	设备id	   名称		状态						uid	 用户姓名	创建时间
					ready,fly,fault
	
	接口
	无人机注册	运维人员		o
	
	无人机列表	用户	准备状态	o
	
	选择无人机	用户			o
	
	无人机故障申报	运维人员		o
	
	无人机停飞				o
	
	修改无人机状态接口			o
	
	无人机连接管理				
	
	
																		
74	
	word里面左上角的插入可以选择图片,

73	
	原来一个类在运行期间是可以动态的获取到其他类公开的成员变量的
	
		
72	当代码中出现成员变量时,你对这个线程安全的处理依然模糊,为什么你还是模糊?
	你曾经理解过一次,可能还需要再次理解	
	做软件关键还是代码驾驭能力,说白了本质上是你的记忆提前能力,
	你的创业能力究竟如何,你何时能自己创业,今天你究竟积累了多少自信
	
71	使用容器管理的对象依然难度相当大,比如用websocket主动向用户推送请求

70	为什么我自己部署的war包无法访问index.html
	
69	
	今天在websocket的环境准备上 和如何给保持连接的客户端主动推搡消息问题上遇到了难题,这样的难题该如何攻克
			
68	
	java.lang.ClassCastException: ch.qos.logback.classic.servlet.LogbackServletContainerInitializer
	cannot be cast to javax.servlet.ServletContainerInitializer
	

67	tomcat jar包冲突问题
	这种方式好像不行
	tomcat:run scope=provided ：正常启动
	tomcat:run scope=compile ：启动失败
	tomcat:run-war scope=provided ：正常启动
	tomcat:run-war scope=compile ：正常启动
	
	//		
	注释所有的代码,tomcat是可以启动成功的


66	这个弹幕服务器
	
	1.以房间号为主题,用户进入直播间就表示用户订阅了这个主题,订阅的代码具体如何实现?
	  
				
65	这个弹幕服务器你准备具体如何实现?
	
	2.采用服务器主动推送技术,你好像并未搞清楚推送细节
	1.将弹幕保存起来,让前端去循环发送接口请求,这种实现思路相对是比较好做的

64	技术跟业务的结合一直都是相当困难的
	
63	人总是有自己经历旺盛的时期和经历疲劳的时期,这是自然规律,
	经历旺盛时处理有难度的事情,经历疲劳时适合复习和运动,
	调节状态
	
62	代码能够具体到能够准确推断出具体的值才算是真的明白
		
61	为何还原到虚拟机快照后会链接 不上虚拟机

60	jpa原生对自定义sql分页的查询好像支持的不好
	
59	
	idea 打包的jar运行报 “XXX中没有主清单属性”
	uas_system中增加
	   <build>
		<plugins>
		    <plugin>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-maven-plugin</artifactId>
		    </plugin>
		</plugins>
	    </build>
		
	maven在打包时需要设置打包方式
	
58
	()中的代码一般放的是对资源的申请，如果{}中的代码出项了异常，（）中的资源就会被关闭，这在inputstream和outputstream的使用中会很方便例如

57	
	在SpringBoot项目中，配置spring.http.multipart.maxFileSize用于限定最大文件上传大小。

	但是，SpringBoot版本不同，关于这一块的配置也不相同。

		

	1、Spring Boot 1.3 版本：

	　　multipart.maxFileSize

	 

	2、Spring Boot 1.4 版本和 1.5 版本：

	　　spring.http.multipart.maxFileSize

	 

	3、Spring Boot 2.0 版本：

	　　spring.servlet.multipart.maxFileSize

56	如何快速搭建一个前端服务器,使之能够快速实现文件上传
	<!DOCTYPE html>
	<html lang="en">
	<head>
	    <meta charset="UTF-8">
	    <title>文件上传</title>
	</head>
	<body>
	<form method="post" action="localhost:8088/log/upload" enctype="multipart/form-data">
	    <input type="file" name="file">
	    <br><br>
	    <input type="submit" value="提交">
	</form>
	</body>
	</html>
	
55	资源地址
	image:
		https://baikebcs.bdimg.com/adpic/270-150%E7%BB%93%E6%9E%84%E5%8C%96%E7%94%A8%E6%88%B7%E6%8B%9B%E5%8B%9F.png
		
	vedio:
		https://vd3.bdstatic.com/mda-kfvfbi0x30k8gqwp/mda-kfvfbi0x30k8gqwp.mp4?playlist=%5B"hd"%2C"sc"%5D
	

54	朋友圈表  
	id   图片地址   视频地址  资源类型	 资源id		标题  内容	点赞数   所属用户id	所属用户姓名  可见状态  创建时间
	id   image_url 	video_url resource_type  resource_id	title content	likenum  uid		uname	      visible	create_time
	
	点赞需要表吗?  暂定不需要
	
	标签表
	id	name	 创建时间
	
		
	关注表	api_focus
	id	关注人id	被关注人id	创建时间
	id	focus_id	befocus_id	create_time 
	
	收藏表  api_favorite  
	id	用户id	  朋友圈id	创建时间
	id	uid	  fid		create_time
	
	用户表
	id      image	 level
	
	
	评论表  api_comment     
	id	评论内容   朋友圈id   朋友圈类型   评论人id  评论人名称  被评论人id  创建时间
	id	content	   fid	      ftype	   cid	     cname	 touid	     create_time				
	
		
	varchar(40)  datetime
	回复表  api_reply
	id	评论id *	评论或者父回复id *	回复内容   回复的类型(评论还是回复)  回复人id 	回复人姓名   被回复人id  回复所属朋友圈id(可不要)   创建时间
	id	comment_id	reply_id		content	   rtype		     rid	rname	     touid	 fid			    create_time		    	
		
	
	reply_type：表示回复的类型，因为回复可以是针对评论的回复(comment)，也可以是针对回复的回复(reply)， 通过这个字段来区分两种情景。
	
	reply_id：表示回复目标的id，如果reply_type是comment的话，那么reply_id＝comment_id，如果reply_type是reply的话，这表示这条回复的父回复。
		
	
	发表评论
		
	发表回复
	
	单条朋友圈详情和评论列表
	
	单条评论和回复列表
		
		

53	查看数据报表
	var thisIndex = parseInt($(this).parent().attr('data-index'));
	var thisRow = data.rows[thisIndex];
	
52	老版代码
	   /**
	     * 开机时间.
	     */
	    private String bootUpTime;
	    /**
	     * 待机时间.
	     */
	    private String standbyTime;
	    /**
	     * 加工件数.
	     */
	    private String packageNumber;
	    /**
	     * 加工时间.
	     */
	    private String packageTime;
	    /**
	     * 停机时间.
	     */
	    private String bootDownTime;       			
	
		
	  String tableName = "PUC_D_"+moduleSn;
//                    StringBuffer sql = new StringBuffer("select count(DATE_DEC)  FROM " +tableName+ "  WHERE SUBLAB = ? and DATE_DEC!=0 ");
                    StringBuffer sql = new StringBuffer("select count(DATE_DEC)  FROM " +tableName+ "  WHERE SUBLAB = ? ");
                    if (StringUtils.isNotNull(startTime)) {
                        sql.append(" AND t.RECEIVE_TIME >=  " + sdf.parse(startTime));
                    }
                    if (StringUtils.isNotNull(endTime)) {
                        sql.append(" AND t.RECEIVE_TIME<=  "+sdf.parse(startTime));
                    }

                    Object [] params = {"08"};

                    Object upTime = mysqlDao.countSqlWithNativeSql(sql.toString(), params);

                    Integer uptimeInt = Integer.valueOf(String.valueOf(upTime));
                    zdDevice.setBootUpTime( TimeDateUtils.secToTime(uptimeInt) );

//                    List<LabelDataDec> llds = zdDao.queryUptime(moduleSn,"08",startTime,endTime);
//					System.out.println("llds_list.size:"+llds.size());
//					if(llds!=null) {
//            			int totoleUt = 0;
//            			for(LabelDataDec lld : llds) {
//            				totoleUt += Integer.valueOf(String.valueOf(lld.getDataDec()));
//            			}
//
//            			zdDevice.setBootUpTime(TimeDateUtils.secToTime(totoleUt));
//            		}
            		//待机时间

            		//加工件数
                    params = new Object[]{"22"};
                    Object packageNumber = mysqlDao.countSqlWithNativeSql(sql.toString(), params);

                    zdDevice.setPackageNumber(String.valueOf(packageNumber));

//            		List<LabelDataDec> lld26s = zdDao.queryUptime(moduleSn,"22",stratTime,endTime);
//            		if(lld26s!=null) {
//            			int totolePn = 0;
//            			for(LabelDataDec lld26 : lld26s) {
//            				totolePn += Integer.valueOf(String.valueOf(lld26.getDataDec()));
//            			}
//            			zdDevice.setPackageNumber(String.valueOf(totolePn));
//            		}

            		//加工时间
                    params = new Object[]{"09"};
                    Object packageTime = mysqlDao.countSqlWithNativeSql(sql.toString(), params);

                    Integer packageInt = Integer.valueOf(String.valueOf(packageTime));
                    zdDevice.setPackageTime( TimeDateUtils.secToTime(packageInt) );


//            		List<LabelDataDec> lld09s = zdDao.queryUptime(moduleSn,"09",stratTime,endTime);
//            		if(lld09s!=null) {
//            			int totolePn = 0;
//            			for(LabelDataDec lld09 : lld09s) {
//            				totolePn += Integer.valueOf(String.valueOf(lld09.getDataDec()));
//            			}
////            			zdDevice.setPackageTime(String.valueOf(totolePn));
//            			zdDevice.setPackageTime(TimeDateUtils.secToTime(totolePn));
//            		}

            		//停机时间
                    params = new Object[]{"0A"};
                    Object bootDownTime = mysqlDao.countSqlWithNativeSql(sql.toString(),params);
                    Integer bootDownTimeInt = Integer.valueOf(String.valueOf(bootDownTime));
                    zdDevice.setBootDownTime( TimeDateUtils.secToTime(bootDownTimeInt) );

//            		List<LabelDataDec> lld10s = zdDao.queryUptime(moduleSn,"0A",stratTime,endTime);
//            		if(lld10s!=null) {
//            			int totolePn = 0;
//            			for(LabelDataDec lld10 : lld10s) {
//            				totolePn += Integer.valueOf(String.valueOf(lld10.getDataDec()));
//            			}
////            			zdDevice.setBootDownTime(String.valueOf(totolePn));
//            			zdDevice.setBootDownTime(TimeDateUtils.secToTime(totolePn));
//            		}
51
	puc_zd_deviceinfo
	有肯多信息
	
			

50	
	测试包:
	3EFF01003F7074000500000001000000000000000404080004000000000409000400000000040A000400000000040C00040000000004220004000000007967

49	
	data:00 00 00 00
	data:00 00 00 00
	data:00 00 00 24
	data:00 00 00 00
	data:00 00 00 00
	
48	
	程序每次都是解析原始数据puc_original_data(OriginalData),再根据相应的内容插入到puc_d_类似的表中吗
	
	PatronData_Vibration
		
	最初
	SaticScheduleTask.configureTasks
		DataPacket d = analysisDataBl.analysisDataPackage(ddd);
	
	初步判断是解析
	DataPacket rtn = originalDataBl.disposePackage(od.getGid(), String.valueOf(od.getDataPackage()));

	AnalysisDataDaoImpl.creatTableByDevice
	AnalysisDataDaoImpl.insertData
	
47	统计这些字段的来源
	开机时间	
	加工时间	
	停机时间	
	加工件数	
	净开动率
	

	关注 AnalysisDataDaoImpl
	     insertData
		
	     UdpServerStartup  	
		
	AnalysisDataServiceImpl.analysisDataPackage 

46	java -jar iot.puc.web-0.0.1.jar

45	平台账号密码测试
	admin admin123	全菜单
	ipotest2	ipotest2
	ipotest		ipotest
	
	权限不一样

44	
	http://localhost/manager/index.html
	
43	
	spring security oauth2认证方式
	
42	
	

	<div class="GuideHead w">
	<h1><a href="#"><img src="/manager/images/logo_puc.png"></a></h1>
	    
	    <div class="GuidePhone">
		<p><img src="/manager/images/Phone_puc.png" width="211" height="27"></p>
	    </div>
	</div>
	
	<div>
		<p>
			武汉普创数据科技有限公司&nbsp;&nbsp;版权所有&nbsp;&nbsp;&nbsp;&nbsp;<a href="#">鄂ICP备14013996号-1</a>
		</p>
	</div>

	console.log("in index.js pucIndex1");
        $("#pucIndex").unbind('click').click(function () {
        	alert("123");
            console.log("erp0000");
            new UIFrame('/manager/html/index/pucIndex.html', $('#mainWrap')).show();
            // 情况顶部按钮
            $('#mainBtnBox').html('');
        });
	这段代码为什么放在js中以后为什么会无效了,而换了另一个位置则有效	
	
	select * from ecp_menu_module where module_name = '开放平台'
	
	select * from ECP_MENU_INFO where menu_name = '平台应用管理'
	

41	数据库str 转 int 的排序方式
	select * from puc_update_package order by cast(package_version as UNSIGNED INTEGER) desc;
		

40	
	fileSize 文件大小
	SELECT t.gid AS gid,t.version_type as versionType,t.version_name as versionName,t.version_log as versionLog, t.binding_time AS bindingTime, t.package_path AS packagePath,t.MODEL As model, t.package_version AS packageVersion FROM puc_update_package t where 1=1 order by t.package_version DESC limit 1
	

	iot.puc.zdservice.api.UpdatePackageInfoService.findLastVersion
		
	手机菜单
	2019081713595700038	puc.zd.updatepackageinfo	2019081713595700038	app版本升级	app版本升级			0.0.1	0	2020-06-19 09:40:42	2020-06-19 09:40:44

39	pom问价中错误的配置可能会导致安装失败

38	
	is not a working copy
	
37	
	hibernate策略update会自动添加原来没有的字段
	

36	
	下载路径:
	 /iot/puc/service/download/
	 A610E3411549E1E1AD2E02765728733626B6B26BB41475B511A658637A46B482916BD4A
	 9F1B99A435F23D4CB3D127C63FB1D4623278D7C6C8BD76964157779D03B72F8F5CC89C28D
	 C88B215F98EE5DED4C9FA3ECB1ED8E9267A36DE5ADF745974E3413D819D59
	 CF9F2ABBBE6C9F4885A9F1B185E97F5BEED9BF05AD00F309A6F5BECD40A404D6F0156FEEA09FD6945D3
	
	http://localhost/iot/puc/service/download/A610E3411549E1E12D5FB0977D3E9E612C1B5D9AD6DA281E91103F31DBAE0CFA916BD4A9F1B99A435F23D4CB3D127C63FB1D4623278D7C6C8BD76964157779D039965EE92464069D88EE17696C3C2C24EA5724A6EABBC9F304317B2C46DFF5B759D9990E41257584FE1DBEC109D5599CD4B01B853394DD0CA56CAE7EC438411FD190D9CCB8B539FF56FEEA09FD6945D3
	
35	
	文件操作
	运维支撑 - 系统单据 - 文件管理
	
	{field: 'filePath', 
	title: '文件路径',
	width: 100,
	formatter: function(value, rows, index) {
		  var sHtml = value + '<span class="btn btn_look jsEdit" data-gid="'+rows.gid+':'+rows.fileName+':'+rows.filePath+'">下载</span>';
		  return sHtml;
	  }
	  },
	
	data-gid="2020061814135700001:222:/file/4c0eaa65d649fe8b66ec4e3fce0bf16c.apk"		
	
	filemanager.js

34	
	$.messager.confirm('确认','您确认想要'+ opts.msgText +'吗？',function(r) {   
		$.ecp.remoteService.ajax4Bean({
						beanId: opts.beanId,
						data: dataObj,
						success: function(resdata, textStatus, jqXHRult) {
							if (resdata && resdata.suf == true) {
								$.messager.show({
									title: '我的消息',
									msg: opts.msgText + '成功'
								});
								
								// 成功回调
								if (typeof opts.success === 'function') {
									opts.success(resdata);
								}
							} else {
								if (resdata.suf != true) {
									$.messager.show({
										title: '我的消息',
										msg: resdata.returnMsg
									});
								} else {
									$.messager.show({
										title: '我的消息',
										msg: opts.msgText + '失败'
									});
								}
								
								// 失败回调
								if (typeof opts.error === 'function') {
									opts.error(resdata);
								}
							}
						}
					});
		}
	
33	升级包
	上传
	http://localhost/iot/service/gateway?callName=iot.puc.zdservice.api.UpdatePackageInfoService.addUpdatePackageInfo(reqMap)
	列表
	http://localhost/iot/service/gateway?callName=iot.puc.zdservice.api.UpdatePackageInfoService.findAllUpdatePackageInfoInPage(RequestParameterMap)
	
32	
		//新增内容
	@Column(name = "version_type", columnDefinition="varchar(40) COMMENT '升级类型'" )
	private String versionType;

	@Column(name = "version_log", columnDefinition="varchar(200) COMMENT '升级日志'" )
	private String versionLog;
	

31	表名
	PUC_UPDATE_PACKAGE
	

30	列表页面请求
	http://localhost/iot/service/gateway?callName=iot.puc.zdservice.api.UpdatePackageInfoService.findAllUpdatePackageInfoInPage(RequestParameterMap)

29	页面是根据菜单请求返回的页面
	
28	
	/package/4d01f530d6520b16d12e86a4d3b05ddc.apk

	/aus/ausuppackage.html
	
	zdupdatemanager.js
	
	packageForm.html
	
	目前升级包都走	packageForm.js
	
27	今日操作 
	意见反馈表加创建时间
	
26	预警信息参考配置
		
		SELECT * from open_api where gid = '2019081713595700019'

		select * from open_api_request where op_api_id='2019081713595700019'

		
		StringBuffer querySql = new StringBuffer("select t.gid, ");
    		querySql.append( "t.api_name as serviceName,");
    		querySql.append( "r.api_direction as serviceType,");
    		querySql.append( "t.ali_nam as serviceAlias,");
    		querySql.append( "t.api_ver as serviceVersion,");
    		querySql.append( "r.url as beanId,");
    		querySql.append( "r.con_num as rateLimit ");
    		querySql.append( "from open_api t right join open_api_request r ");
    		querySql.append( " on r.op_api_id=t.gid ");
		

25	DataPacket initBeanDataInfo = initBeanData(beanId, request, requestContext);

24	warning_list
	
23	
	2020-06-17 11:03:42.666  WARN 21404 --- [bboBeanLoader-8] c.a.dubbo.config.model.ApplicationModel  :  [DUBBO] Already register the same consumer:iot.puc.zdservice.api.ZdService:0.0.1, dubbo version: 2.6.0, current host: 192.168.0.102
	---22222-----#####------zdblImpl------queryEarlyWarningInfo--------
	服务执行完成，执行总耗时（从请求进入到完成结果返回） : 0.086 秒 
	剩余数组：40
	剩余数组：32
	剩余数组：24
	剩余数组：16
	剩余数组：8
	剩余数组：40
	剩余数组：32
	剩余数组：24
	剩余数组：16
	剩余数组：8
	
22	
	select * from puc_zd_deviceinfowarning where gid = '2020051914314501703'

	puc_zd_deviceinfowarning
	
21	页面有这样的标志
	
	<body code="/aus/ausmes.js">
	
		
20	格式化时间
	{
	    field: 'createTime',
	    title: '提交时间',
	    width: 140,
	    formatter:"date",
	    formatoptions: {srcformat:'Y-m-d H:i:s',newformat:'Y-m-d H:i:s'},
	    sortable : true
	}
	t.create_time as createTime

19	
	消息
	http://localhost/iot/service/gateway?callName=iot.puc.zdservice.api.ZdService.queryAdvise(RequestParameterMap)

18	dante2020-06-15 10:51
	申请直播云服务需要已经备案的域名 目前我们提供的 ipotestcloud.com 域名已经备案过, 但官网显示域名没有备案,请查实

	七牛云工程师2020-06-15 11:12
	你好，直播域名必须拥有工信部和公安部双重备案才可以，请知悉
	
17	pili-vod.test.qiniucdn.com
	
16	sina.com.pubv4.pilidns.com

15	后台的传智文字竟然在这个文件里
	通过 crtl + shift + f 搜索找到的
	D:\01_work\08_studio_code\project-puc-uas-vue-master\src\components\Breadcrumb\index.vue

14	
	我的github
	ganyankai 
	784979813@qq.com	(自己代码库)	
	or 609021076@qq.com
	-----1234
	https://github.com/ganyankai/wp001stu

13
	  七牛云测试域名是用户在创建云存储空间时系统自动生成的七牛域名，
	  以 clouddn.com / qiniucdn.com / qiniudn.com / qnssl.com / qbox.me 等结尾，
	  此类域名仅供用户测试和体验七牛产品功能，不能用于正式生产环境
	  accessKey:
	  _WXxRZz5XkCic3CjlEY1Ro9HxYKkNDglialqslEo
	  
	  secretKey:
	  fZiHdyOckTqqr0DsYKKkYLoVjBnoHtdxde5Qe-2z
	  
12	
	auditDetail({
	    id: this.formData.id,
	    remarks: this.formData.remarks,
	    state: state
	  }).then(() => {
	    if (state === '1') {
	     this.$message.success('恭喜你，审核成功！')
	   }
	    if (state === '2') {
	     this.$message.success('已拒绝审核！')
	   }
	    this.$emit('getObjInfo', this.formData)
	    })
	
11	
	前缀
	cn.puc.uas

10	
	tableName:PUC_D_1
	upTime:187266
	packageNumber:187266
	packageTime:187266
	bootDownTime:187266
	tableName:PUC_D_2

	upTime:159970
	packageNumber:159970
	packageTime:159970
	bootDownTime:159970
	tableName:PUC_D_5
	upTime:1873
	packageNumber:1873

	packageTime:1873
	bootDownTime:1873
	tableName:PUC_D_3
	upTime:14517
	packageNumber:14517

	packageTime:14517
	bootDownTime:14517
	tableName:PUC_D_4
	upTime:29742
	packageNumber:29742
	packageTime:29742

	bootDownTime:29742
	tableName:PUC_D_6
	upTime:2980
	packageNumber:2980
	packageTime:2980
	bootDownTime:2980


09	
	//						userList.stream().mapToInt(User::getAge).sum();
	//						totoleUt = llds.stream().mapToInt( Integer.valueOf(String.valueOf(LabelDataDec::getDataDec)));
	//						totoleUt = llds.stream().flatMapToInt(LabelDataDec::getDataDec);

	//            			zdDevice.setBootUpTime(String.valueOf(totoleUt));

08	
	修改前数据
	
	1
	振动机床1
	zd1001
	A区1线1001台
	2019-10-30 09:20:28
	机床
	9年
	00:00
	00:00
	00:00
	297
	0.00%
	查看数据报表参数设置查看设置

	2
	振动1002
	zd1002
	A区2号
	2019-10-31 09:39:01
	机床
	8年
	03:50:19
	5825:26:49
	01:45
	36400
	151759.20%
	查看数据报表参数设置查看设置

	3
	zd1005
	zd1005
	A区5号
	2019-11-01 15:45:40
	机床
	5年
	00:00
	60:43:04
	52:50:51
	1837
	0.00%
	查看数据报表参数设置查看设置

	4
	zd1003
	zd1003
	A区3号
	2019-11-04 10:06:15
	机床
	6年
	00:00
	70:23:07
	1073:36:54
	873
	0.00%
	查看数据报表参数设置查看设置

	5
	zd1004
	zd1004
	A区4号
	2019-11-04 10:07:33
	机床
	6年
	07:08:39
	20:56:25
	32:09:15
	1280
	293.10%
	查看数据报表参数设置查看设置

	6
	zd1006
	zd1006
	A区6号
	2019-11-04 15:31:13
	机床
	6年
	00:00
	35:55:53
	01:40:06
	2948
	0.00%

07	指令	ZdDaoImpl
	3e ff 02 00 23
	70 74 00 05 00
	00 00 01 00 00
	00 00 00 00 00
	06 07 17 07 18
	07 19 07 20 07
	21 07 29 05 07
	
05   
	llds_list.size:187266
	llds_list.size:159970
	llds_list.size:1873
	llds_list.size:14517
	llds_list.size:29742
	llds_list.size:2980
	
04	
	npm install -g cnpm --registry=https://registry.npm.taobao.org
	cnpm install 	
03
	select t.GID AS gid,t.LABGROUP AS labelGroup,t.SUBLAB AS sublab,t.DATE_DEC AS dataDec,t.RECEIVE_TIME AS receiveTime FROM PUC_D_1  t WHERE t.SUBLAB=22
	
	select count(t.DATE_DEC)  FROM PUC_D_1  t WHERE t.SUBLAB=22
	大概2万条记录
02 


iot.activeMQ
iot.front.compress
iot.res
iot.rest
iot.file

iot.service.jssite
iot.service.gateway
iot.x.common.service
iot.x.common.service
iot.x.opendev.web

iot.x.desktop.web
iot.api
iot.x.dto
iot.x.bo
iot.basement.service

iot.runtime


01 
iot.parent
iot.common 
iot.components
iot.context
iot.datasource


