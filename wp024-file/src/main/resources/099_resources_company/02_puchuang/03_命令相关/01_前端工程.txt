24	
	 //通过这种可以以编码的方式实现页面跳转
	this.$router.push({ path: '/companys/details/1' });
	
	//这还有一种传参的写法
	this.$router.push({ name: 'demo2', params: { userId: 123 }, query: { plan: 'private' } })

23	工程中好像是通过  name: 'companys',   与权限表中code字段关联来实现不同角色显示权限不一样
	export default [
	  {
	    root: true,
	    path: '/companys',
	    component: Layout,
	    redirect: 'noredirect',
	    name: 'companys',     //难道这里对应权限表code字段
	    meta: {
	      title: '景区管理',
	      icon: 'component'
	    },

22	饿了么ui组件地址
	https://element.eleme.cn/#/zh-CN/component/layout
		

21	今天这个引入组件的问题,不是通过百度解决的,而是通过过去模糊的印象,结合过去的代码搞定的
	现在定义4个步骤
	05 通过ref引入导入页面的变量
		 handlAdd() {
		      alert("handlAdd")
		      this.$refs.demoref.dialogFormVisible=true
		    },
		
	04 组件引入
		 <el-tab-pane label="机场信息2" name="third">
                   <!-- import demo from '@/module-companys/pages/index.vue'  -->
                    <component v-bind:is="demo" ref="demoref"></component> 
                </el-tab-pane>

	03 定义变量
		data () {
		    return {
			demo:'demo',
			//引入主键这个不能省
			employeesAdd: 'employeesAdd',
			activeName: 'first',
	
	02 声明主键
		export default {
		  name: 'companys-detail',
		  components: {
		   
		    demo
		  },
	
	01 导入页面
	import demo from '@/module-companys/pages/index.vue'
	

20	为什么 index.vue中的
	<router-link :to="'/companys/details/'+scope.row.id">查看</router-link>可以跳转
	而details.vue中的
	<router-link :to="'/companys/details/'+scope.row.id">查看</router-link> 却无法跳转
	vue中的路由一直是个难点

19	有很多tab的组件参照员工表中的详情页面
	
18	新增菜单步骤
	06 编写业务页面
	   /src/module-saas-clients/pages/index.vue

	05 配置请求路径:
	   /src/api/base/company	
	   		
	04 配置路由菜单
	   /src/module-saas-clients/router/index.js		

	03 注册模块
	    编辑 src/main.js		
	    	
	02 构造模拟数据
	   (1) 在 /src/mock 中添加模拟数据company.js	
	  （2）/src/mock/index.js配置模拟API接口拦截规则
	   	
	01 新增模块
	（1）手动创建
	方式一：在src目录下创建文件夹，命名规则：module-模块名称（）
	在文件夹下按照指定的结构配置assets，components，pages，router，store等文件

	（2）使用命令自动创建
	安装命令行工具
	执行命令
	npm install -g itheima-cli
	itheima moduleAdd saas-clients
	`saas-clients` 是新模块的名字

17     首页横幅
	根据样式搜索:
	src\module-dashboard\components\layoutNavbar.vue
	
16	动态构造权限列表
	src/module-dashboard/store/permission.js
	//动态构造权限列表
        let accessedRouters = filterAsyncRouter(asyncRouterMap, roles)
        commit('SET_ROUTERS', accessedRouters)
		
15	用户相关的js
	/src/module-dashboard/store/user.js

14	用户登录相关请求
	/src/api/base/frame.js
	
13	定义本地请求路径
	/config/index.js

12	注册登录页面定义:
	/src/module-dashboard
	
11	标题定义   /表示项目根路径
	/index.html

10	配置部署后的路径
	prod.env.js
	'use strict'
	module.exports = {
	  NODE_ENV: '"production"',
	  // BASE_API: '"https://mock.boxuegu.com/mock/29"'
	  BASE_API: '"http://localhost:8088"'
	}
	

09	打包
	npm run build

08	
	https://element.eleme.cn/#/zh-CN/component/installation
	
07	
	console.log('res1.data.data.roleIds:');
        console.log(res1.data.data.roleIds);

06	
	this.$store.dispatch(‘Login’, this.loginForm)来调取store里的user.js的login方法，从而要更新。

05	
	vue中引入js文件
	function realconsole(){  
	    alert("hello.thanks use me");  
	  
	}  
	
	    export {  
		realconsole  
	    }  
	
	
	调用方:
	<template>  
	    <div class="teslist">  
		<button @click="methods1">显示console</button>  
	    </div>  
	</template>  
	<script src="../../lib/myconsole.js"></script>  
	<script>  
	    import { realconsole } from '../../lib/myconsole.js'  
	    export default {  
		methods:{
	　         methods1:function(){  
		      realconsole();  
		   }  
	    }}  
	</script>  
	<style>  
	    .teslist {  
	    }  
	</style>  
	
04	
	D:\01_work\08_studio_code\project-puc-uas-vue-master\config\index.js  配置所有请求的前缀
	D:\01_work\08_studio_code\project-puc-uas-vue-master\config\index.js  配置的后台代理	

03 新增角色列表
	itheima moduleAdd role

02 启动工程
	02 启动
		npm run dev
	01 关闭语法检查
		cd D:\01_work\08_studio_code\project-puc-uas-vue-master

		打开 config/index.js 将useEslint的值改为false。
		
01 下载依赖
	cnpm install 