01 汇总
    11 mysql:
       03 MySQL 正则表达式
            模式	描述
            ^	匹配输入字符串的开始位置。如果设置了 RegExp 对象的 Multiline 属性，^ 也匹配 '\n' 或 '\r' 之后的位置。
            $	匹配输入字符串的结束位置。如果设置了RegExp 对象的 Multiline 属性，$ 也匹配 '\n' 或 '\r' 之前的位置。
            .	匹配除 "\n" 之外的任何单个字符。要匹配包括 '\n' 在内的任何字符，请使用象 '[.\n]' 的模式。
            [...]	字符集合。匹配所包含的任意一个字符。例如， '[abc]' 可以匹配 "plain" 中的 'a'。
            [^...]	负值字符集合。匹配未包含的任意字符。例如， '[^abc]' 可以匹配 "plain" 中的'p'。
            p1|p2|p3	匹配 p1 或 p2 或 p3。例如，'z|food' 能匹配 "z" 或 "food"。'(z|f)ood' 则匹配 "zood" 或 "food"。
            *	匹配前面的子表达式零次或多次。例如，zo* 能匹配 "z" 以及 "zoo"。* 等价于{0,}。
            +	匹配前面的子表达式一次或多次。例如，'zo+' 能匹配 "zo" 以及 "zoo"，但不能匹配 "z"。+ 等价于 {1,}。
            {n}	n 是一个非负整数。匹配确定的 n 次。例如，'o{2}' 不能匹配 "Bob" 中的 'o'，但是能匹配 "food" 中的两个 o。
            {n,m}	m 和 n 均为非负整数，其中n <= m。最少匹配 n 次且最多匹配 m 次。

       02  删除重复数据
            如果你想删除数据表中的重复数据，你可以使用以下的SQL语句：

            mysql> CREATE TABLE tmp SELECT last_name, first_name, sex FROM person_tbl  GROUP BY (last_name, first_name, sex);
            mysql> DROP TABLE person_tbl;
            mysql> ALTER TABLE tmp RENAME TO person_tbl;

            当然你也可以在数据表中添加 INDEX（索引） 和 PRIMAY KEY（主键）这种简单的方法来删除表中的重复记录。方法如下：

            mysql> ALTER IGNORE TABLE person_tbl
                -> ADD PRIMARY KEY (last_name, first_name);

       01  服务元数据
           SELECT VERSION( )	服务器版本信息
           SELECT DATABASE( )	当前数据库名 (或者返回空)
           SELECT USER( )	当前用户名
           SHOW STATUS	服务器状态
           SHOW VARIABLES	服务器配置变量

    10 京北方简历
        1）登录京北方简历系统 http://11.63.173.230/login 账号：
        wangbiao.gwd  密码：password
        添加简历，已能导出为成功标识。

    09 TP-LINK_git
        gitroot123

    08 struts配置
        <!-- 用户管理 -->
        		<action name="elecUserAction_*" class="elecUserAction" method="{1}">
        			<result name="home">/WEB-INF/page/system/userIndex.jsp</result>
        			<result name="add">/WEB-INF/page/system/userAdd.jsp</result>
        			<result name="findJctUnit" type="json">
        				<param name="includeProperties">\[\d+\]\.ddlCode,\[\d+\]\.ddlName</param>
        			</result>

        < param name ="includeProperties" > < / param>
        includeProperties: 这个属性表示要包含进JSON数据中的数据。

        < paramname="excludeProperties" >< / param>
        excludeProperties: 这个属性表示不要包含进JSON数据中的数据。

        < paramname="excludeNullProperties" >true< /param >
        excludeNullProperties: 这个属性表示去除空数据。

        < param name="ignoreHierarchy">false< / param>
        ignoreHierarchy: 这个属性表示是否忽略等级，也就是继承关系,设置为 false 后会将父类和子类的属性一起返回

    07 idea快捷键
        设置代码格式化: crtl+alt+shift+l
        optimize: 使最优化
            可自动删除无用引用
        rearrange: 重新排列

    06 工作记录
        03 相关路径
            04

            03 quartz
                /iomp-cloud-app/src/main/java/com/ccb/iomp/[模块名]/quartz/
                如下案例为工作流定时任务
                /iomp-cloud-app/src/main/java/com/ccb/iomp/workflow/quartz/TaskDisposeJob.java
                在quartz_jobs.xml文件中添加配置
                /iomp-cloud-web/src/main/resources/application/quartz/quartz_jobs.xml
                如下图，需要定义job和trigger，按图中配置，不做细致讲解

            02 数据层
                           Dao层：/iomp-cloud-data/scr/main/java/com/ccb/iomp/cloud/data/dao/
                           Po层：/iomp-cloud-data/scr/main/java/com/ccb/iomp/cloud/po/
                           Vo层：/iomp-cloud-data/scr/main/java/com/ccb/iomp/cloud/vo/

            01 前台页面
            前端jsp和js需要放置/iomp-cloud-web/src/main/webapp/pages路径的固定模块下。
            例如路由管理：
            Jsp路径：
            /iomp-cloud-web/src/main/webapp/pages/cm/pub/routeMag.jsp
            若有编写的js，则js存放路径：
            /iomp-cloud-web/src/main/webapp/pages/cm/pub/js/

        02 开发步骤
            1、根据业务需求进行数据库设计
            2、根据业务需求进行页面原型设计
            3、在icms-cloud-data工程指定路径创建Po、Vo、Dao相关文件并将所需业务方法实现
            4、在icms-cloud-app工程指定路径创建Service相关文件并将所需业务方法实现
            5、在icms-cloud-web工程指定路径创建Spring和Status配置文件，并添加相关配置
            6、在icms-cloud-web工程指定路径创建Jsp以及js文件，并将页面按照设计原型进行实现
        01 eclipse Deployment Assembly 可以指定发布时依赖的项目和jar包

    05 地址:
        08 mysql学习
            https://www.runoob.com/mysql/mysql-transaction.html

        07 service
            /iomp-cloud-app/scr/main/java/com/ccb/iomp/cloud/

        06 spring
            /iomp-cloud-web/src/main/resources/application/service/

            例如路由管理Spring配置
            /iomp-cloud-web/src/main/resources/application/service/service-registry-cloud-cm.xml
            命名规范
            业务方法名+Srv

        05 struts配置
            /iomp-cloud-web/src/main/resources/application/status

            例如路由管理Struts配置
            /iomp-cloud-web/src/main/resources/application/status/status-cloud-cm.xml

            若是新增的Struts文件，需要添加到总配置文件中，文件路径
            /iomp-cloud-web/src/main/resources/struts.xml

        04 关掉工作流调度任务
            /iomp-cloud-web/src/main/resources/application/spring/spring-cloud.xml
        03 修改IP地址获取方式，并引入相关包:
           /iomp-openframework/src/main/java/com/ccb/iomp/openframework/uaas/PortalAuthorizingRealm.java
        02 使用哪个服务器进行登录认证
            /iomp-cloud-web/src/main/resources/application/outbound/outbound-service-registry-global.xml
        01 数据库地址：
            /iomp-cloud-web/src/main/resources/framework/spring/persist.xml
    04 项目介绍
        1	Iomp-cloud-openframework	系统核心框架集成以及通用工具类
        2	Iomp-cloud-pub	系统公共常量定义
        3	Iomp-cloud-link	云平台连接activemq的配置和实现
        4	Iomp-cloud-data	系统数据层实现以及数据模型类的定义
        5	Iomp-cloud-core	云平台虚拟化核心接口调用层
        6	Iomp-cloud-app	系统业务处理层
        7	Iomp-cloud-web	系统web展示层及核心文件配置层
        8	Iomp-cloud-ear	系统打包工程
        9	Iomp-cloud-automation	云平台虚拟化适配器层
        10	Iomp-cloud-bpm	工作流组件
        11	Iomp-portal-app	统一登录门户业务处理层
        12	Iomp-portal-web	统一登录门户web展示层及统一门户核心文件配置层
        13	Iomp-portal-ear	统一登录门户打包工程
        14	Iomp-aggregator
        15	Iomp-automation-aggregator

    03 名称解释
        05
            1.资源管理主要功能分为 ：云服务管理、计算资源管理 、
            存储资源管理、网络资源管理 、部署单元管理和应用子系统管理。

        04 高可用类型
            集群（3）/HA（2）/RAC（2）/单机（1）/3节点RAC（3）
            需要适配开行两条线

        03 advanced interactive executive ,类unix操作系统，运行在IBM专有的power系列芯片
            设计的小型机硬件系统之上（先进交互运行系统）

        02 ESXi 转为运行虚拟机，最大限度降低配置要求和简化部署设计
                即差即用型软件的交付与安装提供了一种全新和及其简化的方式

        01 CDP 思科发现协议 用来获取相邻设备的协议地址以及发现这些设备的平台


    02 数据模型是流程是重要的参考依据

	01 阅读记录：
	    02 云平台开行输出内部资料
	        08 o
	        07 o
            06 o
	        05 o
	        04 o
	        03 o
	        02 o
	        01 o
		01 24种设计模式
			210