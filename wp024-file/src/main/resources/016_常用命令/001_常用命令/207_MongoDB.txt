17 列值增长
	如果我们想实现对某列值在原有值的基础上进行增加或减少，可以使用$inc运算符来实现
	db.spit.update({_id:"2"},{$inc:{visits:NumberInt(1)}} )
	
16 条件连接
	02 如果两个以上条件之间是或者的关系，我们使用 操作符进行关联，与前面and的使用
		方式相同
		格式为：
		
		$or:[ { },{ },{ } ]
		查询吐槽集合中userid为1013，或者浏览量小于2000的文档记录
		db.spit.find({$or:[ {userid:"1013"} ,{visits:{$lt:2000} }]})

	01
	我们如果需要查询同时满足两个以上条件，需要使用$and操作符将条件进行关联。（相
	当于SQL的and）
	
	$and:[ { },{ },{ } ]

	查询吐槽集合中visits大于等于1000 并且小于2000的文档
	db.spit.find({$and:[ {visits:{$gte:1000}} ,{visits:{$lt:2000} }]})

15 包含与不包含
	查询吐槽集合中userid字段包含1013和1014的文档
	db.spit.find({userid:{$in:["1013","1014"]}})

	不包含使用$nin操作符。
	db.spit.find({userid:{$nin:["1013","1014"]}})
14 大于 小于 不等于
	db.spit.find({visits:{$gt:1000}})
	
	db.集合名称.find({ "field" : { $gt: value }}) // 大于: field > value
	db.集合名称.find({ "field" : { $lt: value }}) // 小于: field < value
	db.集合名称.find({ "field" : { $gte: value }}) // 大于等于: field >= value
	db.集合名称.find({ "field" : { $lte: value }}) // 小于等于: field <= value
	db.集合名称.find({ "field" : { $ne: value }}) // 不等于: field != value
13 模糊查询
	db.spit.find({content:/流量/})
	db.spit.find({content:/^加班/})
12 统计总数
	db.spit.count()
	如果按条件统计 ，例如：统计userid为1013的记录条数
	db.spit.count({userid:"1013"})

11 删除
	删除文档的语法结构：
	以下语句可以将数据全部删除，请慎用
	db.spit.remove({})
	如果删除visits=1000的记录，输入以下语句
	
	db.spit.remove({visits:1000})

10 想修改_id为1的记录
	db.spit.update({_id:"1"},{visits:NumberInt(1000)})
	执行后，我们会发现，这条文档除了visits字段其它字段都不见了，为了解决这个问题，
	我们需要使用修改器$set来实现，命令如下：
	db.spit.update({_id:"2"},{$set:{visits:NumberInt(2000)}})

09 想按一定条件来查询
   db.spit.find({"_id":"1"})
   db.spit.find({"_id":ObjectId("5eaeea2bf5b7371c9ca6449c")})
   

08 插入记录
	db.spit.insert({content:"听说十次方课程很给力呀",userid:"1011",nickname:"小雅",visits:NumberInt(902)})

07 建表(集合) 查询集合
	db.spit.find()

06 创建数据库
	use spitdb

05 远程连接
	mongo 192.168.1.132

04 在宿主机创建mongo容器
	docker run ‐di ‐‐name=tensquare_mongo ‐p 27017:27017 mongo

03 在命令提示符输入以下命令即可完成登陆
	mongo

02 启动服务
	mongod --dbpath=d:\data
01 首先打开命令提示符，创建一个用于存放数据的目录
	md d:\data
	